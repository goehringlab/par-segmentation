Search.setIndex({"docnames": ["autoapi/index", "autoapi/par_segmentation/_interactive/index", "autoapi/par_segmentation/_legacy/index", "autoapi/par_segmentation/_model/index", "autoapi/par_segmentation/_tgf_interpolate/index", "autoapi/par_segmentation/funcs/index", "autoapi/par_segmentation/index", "autoapi/par_segmentation/quantifier/index", "autoapi/par_segmentation/roi/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/par_segmentation/_interactive/index.rst", "autoapi/par_segmentation/_legacy/index.rst", "autoapi/par_segmentation/_model/index.rst", "autoapi/par_segmentation/_tgf_interpolate/index.rst", "autoapi/par_segmentation/funcs/index.rst", "autoapi/par_segmentation/index.rst", "autoapi/par_segmentation/quantifier/index.rst", "autoapi/par_segmentation/roi/index.rst", "index.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._interactive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._legacy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._tgf_interpolate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation.funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation.quantifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation.roi</span></code>", "Welcome to par-segmentation\u2019s documentation!"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 7, 8], "page": [0, 9], "contain": [0, 2, 4, 5, 6, 7, 8], "auto": 0, "gener": 0, "document": 0, "1": [0, 2, 4, 5, 6, 7, 8], "par_segment": [0, 9], "_interact": [], "_legaci": [], "_model": [], "_tgf_interpol": [], "func": [0, 6], "quantifi": [0, 6], "roi": [0, 1, 2, 3, 5, 6, 7], "creat": [0, 2, 5, 6, 7], "sphinx": 0, "autoapi": 0, "view_stack_tk": [1, 6], "frame": [1, 3, 6, 8], "union": [1, 2, 3, 4, 5, 6, 7, 8], "list": [1, 2, 3, 4, 5, 6, 7, 8], "numpi": [1, 2, 3, 5, 6, 7, 8], "ndarrai": [1, 2, 3, 5, 6, 7, 8], "start_fram": [1, 6, 8], "int": [1, 2, 3, 4, 5, 6, 7, 8], "0": [1, 2, 3, 4, 5, 6, 7, 8], "end_fram": [1, 6, 8], "option": [1, 2, 4, 5, 6, 7, 8], "none": [1, 2, 3, 4, 5, 6, 7, 8], "show": [1, 6, 8], "bool": [1, 2, 3, 4, 5, 6, 7, 8], "true": [1, 2, 3, 4, 5, 6, 7, 8], "interact": [1, 6, 7], "stack": [1, 6, 8], "viewer": [1, 6], "arg": [1, 2, 4, 5, 6, 7, 8], "either": [1, 2, 3, 6], "arrai": [1, 2, 5, 6, 7, 8], "2d": [1, 5, 6, 8], "imag": [1, 2, 3, 5, 6, 7, 8], "If": [1, 4, 5, 6, 7], "spefici": [1, 3, 6], "onli": [1, 4, 5, 6], "after": [1, 2, 3, 6], "index": [1, 5, 6, 7, 8, 9], "specifi": [1, 2, 3, 5, 6, 7, 8], "befor": [1, 5, 6], "return": [1, 2, 4, 5, 6, 7, 8], "figur": [1, 6], "axi": [1, 2, 4, 5, 6, 7], "view_stack_jupyt": [1, 6], "view_stack": [1, 6], "plot_segment": [1, 6, 7], "plot": [1, 6, 7], "segment": [1, 2, 6, 7], "result": [1, 2, 4, 6, 7], "singl": [1, 3, 5, 6, 7], "two": [1, 2, 5, 6, 7, 8], "column": [1, 2, 5, 6, 7, 8], "coordin": [1, 2, 3, 5, 6, 7, 8], "plot_segmentation_jupyt": [1, 6], "us": [1, 2, 4, 5, 6, 7, 8], "jupyt": [1, 6, 8], "notebook": [1, 5, 6, 8], "environ": [1, 6], "plot_quantif": [1, 6, 7], "mem": [1, 5, 6], "quantif": [1, 2, 6, 7], "membran": [1, 2, 3, 5, 6, 7], "concentr": [1, 3, 5, 6, 7], "one": [1, 4, 5, 6, 7, 8], "multipl": [1, 6, 7], "plot_quantification_jupyt": [1, 6], "_fitplott": [], "target": [1, 6], "fit": [1, 2, 3, 6, 7, 8], "update_po": [], "p": [], "float": [2, 3, 4, 5, 6, 7, 8], "update_fram": [], "i": [2, 3, 4, 5, 6, 7, 8], "ax1_upd": [], "ax2_upd": [], "plot_fit": [1, 6, 7], "fit_tot": [1, 6], "plot_fits_jupyt": [1, 6], "imagequantdifferentialevolutionsingl": [2, 6], "img": [2, 3, 5, 6, 7, 8], "sigma": [2, 3, 6, 7], "2": [2, 3, 4, 6, 7, 8], "freedom": [2, 3, 6, 7], "5": [2, 3, 6, 7], "period": [2, 3, 5, 6, 7, 8], "thick": [2, 3, 5, 6, 7], "50": [2, 3, 6, 7], "itp": [2, 6, 7], "10": [2, 3, 6, 7], "rol_av": [2, 3, 6, 7], "parallel": [2, 6, 7], "fals": [2, 3, 4, 5, 6, 7], "core": [2, 6, 7], "rotat": [2, 3, 5, 6, 7], "zerocap": [2, 3, 6, 7], "nfit": [2, 3, 6, 7], "iter": [2, 3, 6, 7], "interp": [2, 5, 6, 7], "str": [2, 4, 5, 6, 7], "cubic": [2, 4, 5, 6, 7, 8], "bg_subtract": [2, 6, 7], "work": [2, 5, 6, 7], "take": [2, 5, 6], "cross": [2, 6, 7], "section": [2, 6, 7], "across": [2, 5, 6], "profil": [2, 5, 6, 7], "sum": [2, 6], "cytoplasm": [2, 3, 6], "signal": [2, 6], "compon": [2, 6], "differenti": [2, 6, 7], "evolut": [2, 6, 7], "algorithm": [2, 6], "input": [2, 4, 5, 6], "data": [2, 5, 6], "background": [2, 6], "curv": [2, 6, 7], "abov": [2, 6], "ar": [2, 4, 5, 6, 7, 8], "assum": [2, 4, 6], "gaussian": [2, 6, 7], "error": [2, 4, 6, 7], "width": [2, 5, 6, 7], "set": [2, 4, 5, 6, 8], "defin": [2, 4, 6, 7, 8], "cortex": [2, 6, 7, 8], "can": [2, 3, 5, 6, 7, 8], "output": [2, 5, 6, 7], "from": [2, 4, 5, 6], "def_roi": [2, 6, 8], "paramet": [2, 5, 6, 8], "amount": [2, 6, 7], "allow": [2, 6, 7], "pixel": [2, 5, 6, 7, 8], "unit": [2, 5, 6, 7, 8], "form": [2, 6, 7], "close": [2, 4, 6, 7, 8], "loop": [2, 5, 6, 7], "over": [2, 5, 6, 7], "which": [2, 4, 5, 6, 7], "perform": [2, 5, 6, 7], "interpol": [2, 3, 4, 5, 6, 7, 8], "prior": [2, 6, 7], "mani": [2, 5, 6, 7], "point": [2, 4, 5, 6, 7, 8], "per": [2, 6], "origin": [2, 6], "roll": [2, 3, 5, 6, 7], "averag": [2, 3, 5, 6, 7], "automat": [2, 6, 7], "so": [2, 5, 6, 7], "first": [2, 5, 6, 7, 8], "last": [2, 4, 6, 7, 8], "end": [2, 5, 6, 7], "long": [2, 5, 6, 7], "prevent": [2, 6], "neg": [2, 6, 7], "memban": [2, 6], "valu": [2, 3, 4, 5, 6, 7], "regular": [2, 6, 7], "interv": [2, 4, 5, 6, 7], "around": [2, 6, 7], "adjust": [2, 6, 7, 8], "re": [2, 6, 7, 8], "type": [2, 4, 5, 6, 7], "linear": [2, 4, 5, 6, 7, 8], "estim": [2, 3, 6], "subtract": [2, 6], "comput": [2, 5, 6], "number": [2, 4, 5, 6, 7, 8], "all": [2, 4, 5, 6, 7], "avail": [2, 6], "save": [2, 5, 6, 7, 8], "save_path": [2, 6, 7], "destin": [2, 6], "doesn": [2, 5, 6], "t": [2, 5, 6, 7], "alreadi": [2, 6], "exist": [2, 6], "run": [2, 3, 5, 6, 7, 8], "_fit_profil": [], "tupl": [2, 3, 4, 5, 6], "_mse": [], "l_c_m": [], "sim_imag": [2, 3, 6], "simul": [2, 3, 6], "base": [2, 4, 5, 6], "adjust_roi": [2, 3, 6], "do": [2, 3, 6], "preliminari": [2, 3, 6], "refin": [2, 3, 6], "must": [2, 3, 4, 6], "refit": [2, 3, 6], "reset": [2, 6], "entir": [2, 6], "its": [2, 6], "initi": [2, 6], "state": [2, 6], "reset_r": [2, 6], "clear": [2, 6], "imagequantdifferentialevolutionmulti": [2, 6], "verbos": [2, 3, 6, 7], "gau": [2, 6], "x": [2, 5, 6, 7, 8], "centr": [2, 6], "error_func": [2, 6], "polycrop": [2, 6], "polylin": [2, 6], "enlarg": [2, 6], "crop": [2, 6], "accord": [2, 3, 5, 6, 8], "within": [2, 5, 6], "zero": [2, 3, 4, 6], "bound": [2, 4, 5, 6], "region": [2, 5, 6], "y": [2, 5, 6, 7, 8], "expand": [2, 5, 6], "contract": [2, 6], "same": [2, 4, 5, 6, 8], "shape": [2, 4, 5, 6, 8], "outsid": [2, 6], "band": [2, 6], "25": [2, 6, 7], "75": [2, 6], "intens": [2, 5, 6], "an": [2, 4, 5, 6, 7], "cell": [2, 5, 6, 8], "calcul": [2, 5, 6], "mean": [2, 5, 6], "surrond": [2, 6], "boundari": [2, 5, 6], "inner": [2, 6], "outer": [2, 6, 7], "distanc": [2, 5, 6, 8], "calc_vol": [2, 6], "normcoor": [2, 6], "calc_sa": [2, 6], "imagequantgradientdesc": [3, 6], "3": [3, 4, 5, 6, 7, 8], "100": [3, 6, 7], "lr": [3, 6, 7], "01": [3, 6, 7], "descent_step": [3, 6, 7], "300": [3, 6], "adaptive_sigma": [3, 6, 7], "batch_norm": [3, 6, 7], "roi_knot": [3, 6, 7], "20": [3, 6, 7], "fit_out": [3, 6, 7], "save_train": [3, 6, 7], "save_sim": [3, 6, 7], "preprocess": [3, 6], "step": [3, 5, 6, 7], "straighten": [3, 5, 6], "appli": [3, 4, 6, 7], "common": [3, 6], "length": [3, 4, 5, 6, 8], "self": [3, 6, 7], "pad": [3, 6], "largest": [3, 6], "normalis": [3, 5, 6, 7], "themselv": [3, 6], "global": [3, 6, 7], "init_tensor": [3, 6], "initialis": [3, 6, 7], "offset": [3, 6, 8], "user": [3, 6, 8], "default": [3, 4, 6], "mai": [3, 6], "train": [3, 6, 7], "tensorflow": [3, 4, 6], "tensor": [3, 4, 6], "current": [3, 6], "losses_ful": [3, 6], "plot_loss": [3, 6, 7], "log": [3, 6, 7], "create_offsets_splin": [3, 6], "offsets_t": [3, 6], "nimag": [3, 6], "tfg": 4, "math": 4, "bspline": 4, "flag": 4, "integ": 4, "tensorlik": [4, 6], "knot": [4, 6, 7], "posit": [4, 6, 7], "degre": [4, 6, 8], "cyclic": [4, 6], "name": [4, 6], "bspline_interpol": [4, 6], "b": [4, 6], "spline": [4, 6, 7, 8], "control": [4, 6], "note": [4, 6], "In": [4, 6], "follow": [4, 6], "a1": [4, 6], "b1": [4, 6], "bk": [4, 6], "batch": [4, 6, 7], "dimens": [4, 5, 6], "A": [4, 5, 6, 7, 8], "c": [4, 6], "where": [4, 5, 6], "between": [4, 6, 8], "d": [4, 6, 7], "non": [4, 5, 6], "4": [4, 6], "enumer": [4, 6], "constant": [4, 6], "whether": [4, 5, 6], "op": [4, 6], "interpolate_with_weight": 4, "weight": [4, 5, 6], "bspline_interpolate_with_weight": 4, "dens": 4, "rais": 4, "valueerror": 4, "equal": 4, "compare_dimens": 4, "ax": [4, 5, 6], "tensor_nam": 4, "compar": 4, "static": 4, "dynam": 4, "": [4, 6, 7, 8], "each": [4, 6, 7], "entri": 4, "should": [4, 5, 6], "correspond": [4, 5, 6], "being": [4, 5, 6], "messag": 4, "thrown": 4, "left": [4, 5, 6], "field": 4, "instead": [4, 6, 7], "have": [4, 5, 6], "unexpect": 4, "given": [4, 5, 6], "out": 4, "check": [4, 5, 6], "fail": 4, "_all_are_equ": [], "list_of_object": [], "helper": [], "item": [], "_get_dim": [], "dimension": [5, 6], "_check_tensor": [], "tensors_nam": [], "_check_typ": [], "variabl": [], "variable_nam": [], "expected_typ": [], "expect": 4, "_check_tensor_axis_list": [], "axes_nam": [], "match": [], "_fix_ax": [], "allow_neg": [], "make": [], "_give_default_nam": [], "give": [5, 6], "object": [], "enum": 4, "intenum": 4, "valid": 4, "quadrat": 4, "quartic": 4, "_constant": [], "basi": [], "rang": 4, "_linear": [], "_quadrat": [], "_cubic": [], "_quartic": [], "knot_weight": 4, "num_knot": 4, "sparse_mod": 4, "bspline_knot_weight": 4, "convert": 4, "cardin": 4, "strictli": 4, "describ": 4, "smaller": 4, "than": [4, 6, 7], "nonzero": [4, 6, 7], "well": 4, "indic": [4, 5, 6], "otherwis": [4, 6, 8], "tf": 4, "int32": 4, "greater": 4, "less": 4, "invalidargumenterror": 4, "right": [4, 5, 6], "tfg_add_asserts_to_graph": 4, "assert_all_in_rang": 4, "vector": 4, "minval": 4, "maxval": 4, "open_bound": 4, "we": 4, "want": 4, "repres": [4, 5, 6], "desir": [4, 6, 8], "lower": 4, "upper": 4, "open": [4, 6, 7], "The": [4, 5, 6, 7], "depend": [4, 6, 8], "assert": 4, "oper": 4, "graph": 4, "load_imag": [5, 6], "filenam": [5, 6, 8], "tiff": [5, 6], "full": [5, 6, 7], "path": [5, 6, 7], "file": [5, 6, 7], "import": [5, 6], "includ": [5, 6], "extens": [5, 6], "save_img": [5, 6], "direc": [5, 6], "tif": [5, 6, 7], "save_img_jpeg": [5, 6], "cmin": [5, 6], "cmax": [5, 6], "cmap": [5, 6], "grai": [5, 6], "jpeg": [5, 6], "min": [5, 6], "max": [5, 6], "scale": [5, 6], "along": [5, 6], "colour": [5, 6], "map": [5, 6], "string": [5, 6], "matplotlib": [5, 6], "colormap": [5, 6], "ninterp": [5, 6], "todo": [5, 6], "properli": [5, 6], "apart": [5, 6], "surround": [5, 6], "straight": [5, 6, 8], "evenli": [5, 6], "space": [5, 6], "Will": [5, 6], "unless": [5, 6], "case": [5, 6], "rotated_embryo": [5, 6], "l": [5, 6], "h": [5, 6], "order": [5, 6, 8], "return_roi": [5, 6], "anterior": [5, 6], "posterior": [5, 6], "some": [5, 6], "anticlockwis": [5, 6], "height": [5, 6], "edg": [5, 6], "new": [5, 6, 7, 8], "also": [5, 6], "rotate_roi": [5, 6], "most": [5, 6], "begin": [5, 6], "norm_roi": [5, 6], "align": [5, 6, 7], "interp_1d_arrai": [5, 6], "n": [5, 6], "method": [5, 6, 7, 8], "evalu": [5, 6], "interp_2d_arrai": [5, 6], "row": [5, 6], "rolling_ave_1d": [5, 6], "window": [5, 6, 8], "size": [5, 6], "consecut": [5, 6], "element": [5, 6], "time": [5, 6, 8], "rolling_ave_2d": [5, 6], "bounded_mean_1d": [5, 6], "1d": [5, 6], "add": [5, 6], "combin": [5, 6], "start": [5, 6], "bounded_mean_2d": [5, 6], "asi": [5, 6], "asymmetri": [5, 6], "extrem": [5, 6], "when": [5, 6], "whole": [5, 6], "embryo": [5, 6], "dosag": [5, 6], "One": [5, 6], "wai": [5, 6], "protein": [5, 6], "make_mask": [5, 6], "mask": [5, 6], "binari": [5, 6], "readnd": [5, 6], "dict": [5, 6], "read": [5, 6, 8], "nd": [5, 6], "directori": [5, 6], "folder": [5, 6], "dictionari": [5, 6], "organise_by_nd": [5, 6], "organis": [5, 6], "_direcslist": [], "dest": [5, 6], "level": [5, 6], "exclud": [5, 6], "exclus": [5, 6], "direcslist": [5, 6], "o": [5, 6], "walk": [5, 6], "parent": [5, 6], "go": [5, 6, 8], "down": [5, 6, 8], "e": [5, 6, 7, 8], "g": [5, 6, 7, 8], "ani": [5, 6, 8], "don": [5, 6], "in_notebook": [5, 6], "test": [5, 6], "python": [5, 6, 8], "http": [5, 6], "stackoverflow": [5, 6], "com": [5, 6], "question": [5, 6], "15411967": [5, 6], "how": [5, 6], "code": [5, 6], "execut": [5, 6], "ipython": [5, 6], "offset_coordin": [6, 8], "np": [6, 8], "loadtxt": [6, 8], "coor": [6, 8], "direct": [6, 8], "format": [6, 8], "To": [6, 8], "fiji": [6, 8], "readabl": [6, 8], "savetxt": [6, 8], "newcoor": [6, 8], "fmt": [6, 8], "4f": [6, 8], "delimit": [6, 8], "interp_roi": [6, 8], "npoint": [6, 8], "gap": [6, 8], "possibl": [6, 8], "altern": [6, 8], "succes": [6, 8], "spline_roi": [6, 8], "k": [6, 8], "splprep": [6, 8], "imagequ": [6, 7], "400": [6, 7], "gd": [6, 7], "main": [6, 7], "instruct": [6, 7, 8], "saibr": [6, 7], "rough": [6, 7], "manual": [6, 7], "found": [6, 7], "compile_r": [6, 7], "panda": [6, 7], "datafram": [6, 7], "move": [6, 7], "rather": [6, 7], "intern": [6, 7], "shouldn": [6, 7], "affect": [6, 7], "recommend": [6, 7], "dure": [6, 7], "model": [6, 7], "optimis": [6, 7], "portion": [6, 7], "gradient": [6, 7], "descent": [6, 7], "de": [6, 7], "former": [6, 7], "highli": [6, 7], "latter": [6, 7], "much": [6, 7], "slower": [6, 7], "longer": [6, 7], "maintain": [6, 7], "limit": [6, 7], "veri": [6, 7], "weakli": [6, 7], "learn": [6, 7], "rate": [6, 7], "suppress": [6, 7], "onscreen": [6, 7], "while": [6, 7], "progress": [6, 7], "bar": [6, 7], "legaci": [6, 7], "nb": [6, 7], "buggi": [6, 7], "subpixel": [6, 7], "seri": [6, 7, 8], "txt": [6, 7], "compil": [6, 7], "view_fram": [6, 7], "widget": [6, 7], "view": [6, 7], "actual": [6, 7], "v": [6, 7], "loss": [6, 7], "line": [6, 7, 8], "logarithm": [6, 7], "show_fit": [6, 8], "There": [6, 8], "differ": [6, 8], "draw": [6, 8], "you": [6, 8], "normal": [6, 8], "script": [6, 8], "click": [6, 8], "lai": [6, 8], "backspac": [6, 8], "remov": [6, 8], "press": [6, 8], "enter": [6, 8], "select": [6, 8], "area": [6, 8], "back": [6, 8], "again": [6, 8], "3d": [6, 8], "_roi": [], "_draw_fram": [], "_button_press_callback": [], "event": [], "backend_bas": [], "mouseev": [], "_key_press_callback": [], "keyev": [], "_display_point": [], "roi_jupyt": [6, 8], "exampl": [6, 8], "workflow": [6, 8], "r": [6, 8], "roijupyt": [6, 8], "appear": [6, 8], "print": [6, 8], "confirm": [6, 8], "_undo": [], "_": [], "_save": [], "function": 7, "api": 9, "refer": 9, "modul": 9, "search": 9}, "objects": {"": [[6, 0, 0, "-", "par_segmentation"]], "par_segmentation": [[6, 1, 1, "", "ImageQuant"], [6, 1, 1, "id33", "ImageQuantDifferentialEvolutionMulti"], [6, 1, 1, "", "ImageQuantDifferentialEvolutionSingle"], [6, 1, 1, "id24", "ImageQuantGradientDescent"], [6, 1, 1, "", "ROI_jupyter"], [1, 0, 0, "-", "_interactive"], [2, 0, 0, "-", "_legacy"], [3, 0, 0, "-", "_model"], [4, 0, 0, "-", "_tgf_interpolate"], [6, 3, 1, "", "asi"], [6, 3, 1, "", "bg_subtraction"], [6, 3, 1, "", "bounded_mean_1d"], [6, 3, 1, "", "bounded_mean_2d"], [6, 3, 1, "", "calc_sa"], [6, 3, 1, "", "calc_vol"], [6, 3, 1, "", "create_offsets_spline"], [6, 3, 1, "", "def_roi"], [6, 3, 1, "", "direcslist"], [6, 3, 1, "", "dosage"], [6, 3, 1, "", "error_func"], [5, 0, 0, "-", "funcs"], [6, 3, 1, "", "gaus"], [6, 3, 1, "id15", "in_notebook"], [6, 3, 1, "id9", "interp_1d_array"], [6, 3, 1, "id10", "interp_2d_array"], [6, 3, 1, "id36", "interp_roi"], [6, 3, 1, "", "interpolate"], [6, 3, 1, "", "load_image"], [6, 3, 1, "", "make_mask"], [6, 3, 1, "", "norm_roi"], [6, 3, 1, "id37", "offset_coordinates"], [6, 3, 1, "", "organise_by_nd"], [6, 3, 1, "id18", "plot_fits"], [6, 3, 1, "id19", "plot_fits_jupyter"], [6, 3, 1, "id22", "plot_quantification"], [6, 3, 1, "id23", "plot_quantification_jupyter"], [6, 3, 1, "id20", "plot_segmentation"], [6, 3, 1, "id21", "plot_segmentation_jupyter"], [6, 3, 1, "", "polycrop"], [7, 0, 0, "-", "quantifier"], [6, 3, 1, "", "readnd"], [8, 0, 0, "-", "roi"], [6, 3, 1, "", "rolling_ave_1d"], [6, 3, 1, "id8", "rolling_ave_2d"], [6, 3, 1, "id11", "rotate_roi"], [6, 3, 1, "", "rotated_embryo"], [6, 3, 1, "id14", "save_img"], [6, 3, 1, "", "save_img_jpeg"], [6, 3, 1, "id35", "spline_roi"], [6, 3, 1, "id7", "straighten"], [6, 3, 1, "id16", "view_stack"], [6, 3, 1, "id17", "view_stack_jupyter"], [6, 3, 1, "", "view_stack_tk"]], "par_segmentation.ImageQuant": [[6, 2, 1, "", "compile_res"], [6, 2, 1, "", "plot_fits"], [6, 2, 1, "", "plot_losses"], [6, 2, 1, "", "plot_quantification"], [6, 2, 1, "", "plot_segmentation"], [6, 2, 1, "", "run"], [6, 2, 1, "", "save"], [6, 2, 1, "", "view_frames"]], "par_segmentation.ImageQuantDifferentialEvolutionMulti": [[6, 2, 1, "id34", "run"]], "par_segmentation.ImageQuantDifferentialEvolutionSingle": [[6, 2, 1, "", "adjust_roi"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "reset_res"], [6, 2, 1, "", "run"], [6, 2, 1, "", "sim_images"]], "par_segmentation.ImageQuantGradientDescent": [[6, 2, 1, "id31", "adjust_roi"], [6, 2, 1, "id30", "fit"], [6, 2, 1, "id27", "init_tensors"], [6, 2, 1, "id29", "losses_full"], [6, 2, 1, "id32", "plot_losses"], [6, 2, 1, "id26", "preprocess"], [6, 2, 1, "id25", "run"], [6, 2, 1, "id28", "sim_images"]], "par_segmentation.ROI_jupyter": [[6, 2, 1, "", "run"]], "par_segmentation._interactive": [[1, 3, 1, "", "plot_fits"], [1, 3, 1, "", "plot_fits_jupyter"], [1, 3, 1, "", "plot_quantification"], [1, 3, 1, "", "plot_quantification_jupyter"], [1, 3, 1, "", "plot_segmentation"], [1, 3, 1, "", "plot_segmentation_jupyter"], [1, 3, 1, "", "view_stack"], [1, 3, 1, "", "view_stack_jupyter"], [1, 3, 1, "", "view_stack_tk"]], "par_segmentation._legacy": [[2, 1, 1, "", "ImageQuantDifferentialEvolutionMulti"], [2, 1, 1, "", "ImageQuantDifferentialEvolutionSingle"], [2, 3, 1, "", "bg_subtraction"], [2, 3, 1, "", "calc_sa"], [2, 3, 1, "", "calc_vol"], [2, 3, 1, "", "error_func"], [2, 3, 1, "", "gaus"], [2, 3, 1, "", "polycrop"]], "par_segmentation._legacy.ImageQuantDifferentialEvolutionMulti": [[2, 2, 1, "", "run"]], "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle": [[2, 2, 1, "", "adjust_roi"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "reset_res"], [2, 2, 1, "", "run"], [2, 2, 1, "", "sim_images"]], "par_segmentation._model": [[3, 1, 1, "", "ImageQuantGradientDescent"], [3, 3, 1, "", "create_offsets_spline"]], "par_segmentation._model.ImageQuantGradientDescent": [[3, 2, 1, "", "adjust_roi"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "init_tensors"], [3, 2, 1, "", "losses_full"], [3, 2, 1, "", "plot_losses"], [3, 2, 1, "", "preprocess"], [3, 2, 1, "", "run"], [3, 2, 1, "", "sim_images"]], "par_segmentation._tgf_interpolate": [[4, 1, 1, "", "Degree"], [4, 5, 1, "", "FLAGS"], [4, 5, 1, "", "Float"], [4, 5, 1, "", "Integer"], [4, 5, 1, "", "TFG_ADD_ASSERTS_TO_GRAPH"], [4, 5, 1, "", "TensorLike"], [4, 3, 1, "", "assert_all_in_range"], [4, 3, 1, "", "compare_dimensions"], [4, 3, 1, "", "interpolate"], [4, 3, 1, "", "interpolate_with_weights"], [4, 3, 1, "", "knot_weights"]], "par_segmentation._tgf_interpolate.Degree": [[4, 4, 1, "", "CONSTANT"], [4, 4, 1, "", "CUBIC"], [4, 4, 1, "", "LINEAR"], [4, 4, 1, "", "QUADRATIC"], [4, 4, 1, "", "QUARTIC"]], "par_segmentation.funcs": [[5, 3, 1, "", "asi"], [5, 3, 1, "", "bounded_mean_1d"], [5, 3, 1, "", "bounded_mean_2d"], [5, 3, 1, "", "direcslist"], [5, 3, 1, "", "dosage"], [5, 3, 1, "", "in_notebook"], [5, 3, 1, "", "interp_1d_array"], [5, 3, 1, "", "interp_2d_array"], [5, 3, 1, "", "load_image"], [5, 3, 1, "", "make_mask"], [5, 3, 1, "", "norm_roi"], [5, 3, 1, "", "organise_by_nd"], [5, 3, 1, "", "readnd"], [5, 3, 1, "", "rolling_ave_1d"], [5, 3, 1, "", "rolling_ave_2d"], [5, 3, 1, "", "rotate_roi"], [5, 3, 1, "", "rotated_embryo"], [5, 3, 1, "", "save_img"], [5, 3, 1, "", "save_img_jpeg"], [5, 3, 1, "", "straighten"]], "par_segmentation.quantifier": [[7, 1, 1, "", "ImageQuant"]], "par_segmentation.quantifier.ImageQuant": [[7, 2, 1, "", "compile_res"], [7, 2, 1, "", "plot_fits"], [7, 2, 1, "", "plot_losses"], [7, 2, 1, "", "plot_quantification"], [7, 2, 1, "", "plot_segmentation"], [7, 2, 1, "", "run"], [7, 2, 1, "", "save"], [7, 2, 1, "", "view_frames"]], "par_segmentation.roi": [[8, 1, 1, "", "ROI_jupyter"], [8, 3, 1, "", "def_roi"], [8, 3, 1, "", "interp_roi"], [8, 3, 1, "", "offset_coordinates"], [8, 3, 1, "", "spline_roi"]], "par_segmentation.roi.ROI_jupyter": [[8, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "refer": 0, "par_segment": [1, 2, 3, 4, 5, 6, 7, 8], "_interact": 1, "modul": [1, 2, 3, 4, 5, 7, 8], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9], "class": [2, 3, 4, 6, 7, 8], "function": [1, 2, 3, 4, 5, 6, 8], "_legaci": 2, "_model": 3, "_tgf_interpol": 4, "attribut": 4, "func": 5, "submodul": 6, "packag": 6, "quantifi": 7, "roi": 8, "welcom": 9, "par": 9, "segment": 9, "": 9, "document": 9, "indic": 9, "tabl": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "par_segmentation._interactive": [[1, "module-par_segmentation._interactive"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [8, "functions"]], "par_segmentation._legacy": [[2, "module-par_segmentation._legacy"]], "Classes": [[2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"]], "par_segmentation._model": [[3, "module-par_segmentation._model"]], "par_segmentation._tgf_interpolate": [[4, "module-par_segmentation._tgf_interpolate"]], "Attributes": [[4, "attributes"]], "par_segmentation.funcs": [[5, "module-par_segmentation.funcs"]], "par_segmentation": [[6, "module-par_segmentation"]], "Submodules": [[6, "submodules"]], "Package Contents": [[6, "package-contents"]], "par_segmentation.quantifier": [[7, "module-par_segmentation.quantifier"]], "par_segmentation.roi": [[8, "module-par_segmentation.roi"]], "Welcome to par-segmentation\u2019s documentation!": [[9, "welcome-to-par-segmentation-s-documentation"]], "Contents:": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]]}, "indexentries": {"module": [[1, "module-par_segmentation._interactive"], [2, "module-par_segmentation._legacy"], [3, "module-par_segmentation._model"], [4, "module-par_segmentation._tgf_interpolate"], [5, "module-par_segmentation.funcs"], [6, "module-par_segmentation"], [7, "module-par_segmentation.quantifier"], [8, "module-par_segmentation.roi"]], "par_segmentation._interactive": [[1, "module-par_segmentation._interactive"]], "plot_fits() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_fits"]], "plot_fits_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_fits_jupyter"]], "plot_quantification() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_quantification"]], "plot_quantification_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_quantification_jupyter"]], "plot_segmentation() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_segmentation"]], "plot_segmentation_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_segmentation_jupyter"]], "view_stack() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.view_stack"]], "view_stack_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.view_stack_jupyter"]], "view_stack_tk() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.view_stack_tk"]], "imagequantdifferentialevolutionmulti (class in par_segmentation._legacy)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionMulti"]], "imagequantdifferentialevolutionsingle (class in par_segmentation._legacy)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle"]], "adjust_roi() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.adjust_roi"]], "bg_subtraction() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.bg_subtraction"]], "calc_sa() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.calc_sa"]], "calc_vol() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.calc_vol"]], "error_func() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.error_func"]], "fit() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.fit"]], "gaus() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.gaus"]], "par_segmentation._legacy": [[2, "module-par_segmentation._legacy"]], "polycrop() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.polycrop"]], "reset() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.reset"]], "reset_res() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.reset_res"]], "run() (par_segmentation._legacy.imagequantdifferentialevolutionmulti method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionMulti.run"]], "run() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.run"]], "sim_images() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.sim_images"]], "imagequantgradientdescent (class in par_segmentation._model)": [[3, "par_segmentation._model.ImageQuantGradientDescent"]], "adjust_roi() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.adjust_roi"]], "create_offsets_spline() (in module par_segmentation._model)": [[3, "par_segmentation._model.create_offsets_spline"]], "fit() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.fit"]], "init_tensors() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.init_tensors"]], "losses_full() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.losses_full"]], "par_segmentation._model": [[3, "module-par_segmentation._model"]], "plot_losses() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.plot_losses"]], "preprocess() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.preprocess"]], "run() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.run"]], "sim_images() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.sim_images"]], "constant (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.CONSTANT"]], "cubic (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.CUBIC"]], "degree (class in par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.Degree"]], "flags (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.FLAGS"]], "float (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.Float"]], "integer (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.Integer"]], "linear (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.LINEAR"]], "quadratic (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.QUADRATIC"]], "quartic (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.QUARTIC"]], "tfg_add_asserts_to_graph (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.TFG_ADD_ASSERTS_TO_GRAPH"]], "tensorlike (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.TensorLike"]], "assert_all_in_range() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.assert_all_in_range"]], "compare_dimensions() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.compare_dimensions"]], "interpolate() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.interpolate"]], "interpolate_with_weights() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.interpolate_with_weights"]], "knot_weights() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.knot_weights"]], "par_segmentation._tgf_interpolate": [[4, "module-par_segmentation._tgf_interpolate"]], "asi() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.asi"]], "bounded_mean_1d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.bounded_mean_1d"]], "bounded_mean_2d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.bounded_mean_2d"]], "direcslist() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.direcslist"]], "dosage() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.dosage"]], "in_notebook() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.in_notebook"]], "interp_1d_array() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.interp_1d_array"]], "interp_2d_array() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.interp_2d_array"]], "load_image() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.load_image"]], "make_mask() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.make_mask"]], "norm_roi() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.norm_roi"]], "organise_by_nd() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.organise_by_nd"]], "par_segmentation.funcs": [[5, "module-par_segmentation.funcs"]], "readnd() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.readnd"]], "rolling_ave_1d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rolling_ave_1d"]], "rolling_ave_2d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rolling_ave_2d"]], "rotate_roi() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rotate_roi"]], "rotated_embryo() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rotated_embryo"]], "save_img() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.save_img"]], "save_img_jpeg() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.save_img_jpeg"]], "straighten() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.straighten"]], "imagequant (class in par_segmentation)": [[6, "par_segmentation.ImageQuant"]], "imagequantdifferentialevolutionmulti (class in par_segmentation)": [[6, "id33"], [6, "par_segmentation.ImageQuantDifferentialEvolutionMulti"]], "imagequantdifferentialevolutionsingle (class in par_segmentation)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle"]], "imagequantgradientdescent (class in par_segmentation)": [[6, "id24"], [6, "par_segmentation.ImageQuantGradientDescent"]], "roi_jupyter (class in par_segmentation)": [[6, "par_segmentation.ROI_jupyter"]], "adjust_roi() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.adjust_roi"]], "adjust_roi() (par_segmentation.imagequantgradientdescent method)": [[6, "id31"], [6, "par_segmentation.ImageQuantGradientDescent.adjust_roi"]], "asi() (in module par_segmentation)": [[6, "par_segmentation.asi"]], "bg_subtraction() (in module par_segmentation)": [[6, "par_segmentation.bg_subtraction"]], "bounded_mean_1d() (in module par_segmentation)": [[6, "par_segmentation.bounded_mean_1d"]], "bounded_mean_2d() (in module par_segmentation)": [[6, "par_segmentation.bounded_mean_2d"]], "calc_sa() (in module par_segmentation)": [[6, "par_segmentation.calc_sa"]], "calc_vol() (in module par_segmentation)": [[6, "par_segmentation.calc_vol"]], "compile_res() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.compile_res"]], "create_offsets_spline() (in module par_segmentation)": [[6, "par_segmentation.create_offsets_spline"]], "def_roi() (in module par_segmentation)": [[6, "par_segmentation.def_roi"]], "direcslist() (in module par_segmentation)": [[6, "par_segmentation.direcslist"]], "dosage() (in module par_segmentation)": [[6, "par_segmentation.dosage"]], "error_func() (in module par_segmentation)": [[6, "par_segmentation.error_func"]], "fit() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.fit"]], "fit() (par_segmentation.imagequantgradientdescent method)": [[6, "id30"], [6, "par_segmentation.ImageQuantGradientDescent.fit"]], "gaus() (in module par_segmentation)": [[6, "par_segmentation.gaus"]], "in_notebook() (in module par_segmentation)": [[6, "id0"], [6, "id15"], [6, "par_segmentation.in_notebook"]], "init_tensors() (par_segmentation.imagequantgradientdescent method)": [[6, "id27"], [6, "par_segmentation.ImageQuantGradientDescent.init_tensors"]], "interp_1d_array() (in module par_segmentation)": [[6, "id3"], [6, "id9"], [6, "par_segmentation.interp_1d_array"]], "interp_2d_array() (in module par_segmentation)": [[6, "id10"], [6, "id4"], [6, "par_segmentation.interp_2d_array"]], "interp_roi() (in module par_segmentation)": [[6, "id12"], [6, "id36"], [6, "par_segmentation.interp_roi"]], "interpolate() (in module par_segmentation)": [[6, "par_segmentation.interpolate"]], "load_image() (in module par_segmentation)": [[6, "par_segmentation.load_image"]], "losses_full() (par_segmentation.imagequantgradientdescent method)": [[6, "id29"], [6, "par_segmentation.ImageQuantGradientDescent.losses_full"]], "make_mask() (in module par_segmentation)": [[6, "par_segmentation.make_mask"]], "norm_roi() (in module par_segmentation)": [[6, "par_segmentation.norm_roi"]], "offset_coordinates() (in module par_segmentation)": [[6, "id13"], [6, "id37"], [6, "id6"], [6, "par_segmentation.offset_coordinates"]], "organise_by_nd() (in module par_segmentation)": [[6, "par_segmentation.organise_by_nd"]], "par_segmentation": [[6, "module-par_segmentation"]], "plot_fits() (in module par_segmentation)": [[6, "id18"], [6, "par_segmentation.plot_fits"]], "plot_fits() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_fits"]], "plot_fits_jupyter() (in module par_segmentation)": [[6, "id19"], [6, "par_segmentation.plot_fits_jupyter"]], "plot_losses() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_losses"]], "plot_losses() (par_segmentation.imagequantgradientdescent method)": [[6, "id32"], [6, "par_segmentation.ImageQuantGradientDescent.plot_losses"]], "plot_quantification() (in module par_segmentation)": [[6, "id22"], [6, "par_segmentation.plot_quantification"]], "plot_quantification() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_quantification"]], "plot_quantification_jupyter() (in module par_segmentation)": [[6, "id23"], [6, "par_segmentation.plot_quantification_jupyter"]], "plot_segmentation() (in module par_segmentation)": [[6, "id20"], [6, "par_segmentation.plot_segmentation"]], "plot_segmentation() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_segmentation"]], "plot_segmentation_jupyter() (in module par_segmentation)": [[6, "id21"], [6, "par_segmentation.plot_segmentation_jupyter"]], "polycrop() (in module par_segmentation)": [[6, "par_segmentation.polycrop"]], "preprocess() (par_segmentation.imagequantgradientdescent method)": [[6, "id26"], [6, "par_segmentation.ImageQuantGradientDescent.preprocess"]], "readnd() (in module par_segmentation)": [[6, "par_segmentation.readnd"]], "reset() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.reset"]], "reset_res() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.reset_res"]], "rolling_ave_1d() (in module par_segmentation)": [[6, "par_segmentation.rolling_ave_1d"]], "rolling_ave_2d() (in module par_segmentation)": [[6, "id2"], [6, "id8"], [6, "par_segmentation.rolling_ave_2d"]], "rotate_roi() (in module par_segmentation)": [[6, "id11"], [6, "id5"], [6, "par_segmentation.rotate_roi"]], "rotated_embryo() (in module par_segmentation)": [[6, "par_segmentation.rotated_embryo"]], "run() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.run"]], "run() (par_segmentation.imagequantdifferentialevolutionmulti method)": [[6, "id34"], [6, "par_segmentation.ImageQuantDifferentialEvolutionMulti.run"]], "run() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.run"]], "run() (par_segmentation.imagequantgradientdescent method)": [[6, "id25"], [6, "par_segmentation.ImageQuantGradientDescent.run"]], "run() (par_segmentation.roi_jupyter method)": [[6, "par_segmentation.ROI_jupyter.run"]], "save() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.save"]], "save_img() (in module par_segmentation)": [[6, "id14"], [6, "par_segmentation.save_img"]], "save_img_jpeg() (in module par_segmentation)": [[6, "par_segmentation.save_img_jpeg"]], "sim_images() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.sim_images"]], "sim_images() (par_segmentation.imagequantgradientdescent method)": [[6, "id28"], [6, "par_segmentation.ImageQuantGradientDescent.sim_images"]], "spline_roi() (in module par_segmentation)": [[6, "id35"], [6, "par_segmentation.spline_roi"]], "straighten() (in module par_segmentation)": [[6, "id1"], [6, "id7"], [6, "par_segmentation.straighten"]], "view_frames() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.view_frames"]], "view_stack() (in module par_segmentation)": [[6, "id16"], [6, "par_segmentation.view_stack"]], "view_stack_jupyter() (in module par_segmentation)": [[6, "id17"], [6, "par_segmentation.view_stack_jupyter"]], "view_stack_tk() (in module par_segmentation)": [[6, "par_segmentation.view_stack_tk"]], "imagequant (class in par_segmentation.quantifier)": [[7, "par_segmentation.quantifier.ImageQuant"]], "compile_res() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.compile_res"]], "par_segmentation.quantifier": [[7, "module-par_segmentation.quantifier"]], "plot_fits() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_fits"]], "plot_losses() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_losses"]], "plot_quantification() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_quantification"]], "plot_segmentation() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_segmentation"]], "run() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.run"]], "save() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.save"]], "view_frames() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.view_frames"]], "roi_jupyter (class in par_segmentation.roi)": [[8, "par_segmentation.roi.ROI_jupyter"]], "def_roi() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.def_roi"]], "interp_roi() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.interp_roi"]], "offset_coordinates() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.offset_coordinates"]], "par_segmentation.roi": [[8, "module-par_segmentation.roi"]], "run() (par_segmentation.roi.roi_jupyter method)": [[8, "par_segmentation.roi.ROI_jupyter.run"]], "spline_roi() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.spline_roi"]]}})