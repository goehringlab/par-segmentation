:py:mod:`par_segmentation._interactive`
=======================================

.. py:module:: par_segmentation._interactive


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   par_segmentation._interactive._FitPlotter



Functions
~~~~~~~~~

.. autoapisummary::

   par_segmentation._interactive.view_stack_tk
   par_segmentation._interactive.view_stack_jupyter
   par_segmentation._interactive.view_stack
   par_segmentation._interactive.plot_segmentation
   par_segmentation._interactive.plot_segmentation_jupyter
   par_segmentation._interactive.plot_quantification
   par_segmentation._interactive.plot_quantification_jupyter
   par_segmentation._interactive.plot_fits
   par_segmentation._interactive.plot_fits_jupyter



.. py:function:: view_stack_tk(frames: Union[list, numpy.ndarray], start_frame: int = 0, end_frame: Optional[int] = None, show: bool = True)

   Interactive stack viewer

   Args:
       frames: either a numpy array of a 2D image or a list of 2D arrays
       start_frame: optional. If speficied only show frames after this index
       end_frame: optional. If specified only show frames before this index
       show: if True, show the image

   Returns:
       figure and axis



.. py:function:: view_stack_jupyter(frames: Union[list, numpy.ndarray], start_frame: int = 0, end_frame: Optional[int] = None)


.. py:function:: view_stack(frames: Union[list, numpy.ndarray], start_frame: int = 0, end_frame: Optional[int] = None)


.. py:function:: plot_segmentation(frames: Union[list, numpy.ndarray], rois: Union[list, numpy.ndarray])

   Plot segmentation results

   Args:
       frames: either a numpy array of a 2D image or a list of 2D arrays
       rois: either a single two-column numpy array of ROI coordinates or a list of arrays

   Returns:
       figure and axis



.. py:function:: plot_segmentation_jupyter(frames: Union[list, numpy.ndarray], rois: Union[list, numpy.ndarray])

   Plot segmentation results - use this function in a jupyter notebook environment

   Args:
       frames: either a numpy array of a 2D image or a list of 2D arrays
       rois: either a single two-column numpy array of ROI coordinates or a list of arrays

   Returns:
       figure and axis



.. py:function:: plot_quantification(mems: Union[list, numpy.ndarray])

   Plot quantification results

   Args:
       mems: either a numpy array of membrane concentrations for one image or a list of arrays for multiple images

   Returns:
       figure and axis



.. py:function:: plot_quantification_jupyter(mems: Union[list, numpy.ndarray])

   Plot quantification results - use this function in a jupyter notebook environment

   Args:
       mems: either a numpy array of membrane concentrations for one image or a list of arrays for multiple images

   Returns:
       figure and axis



.. py:class:: _FitPlotter(target: Union[list, numpy.ndarray], fit: Union[list, numpy.ndarray])


   .. py:method:: update_pos(p: float)


   .. py:method:: update_frame(i: int)


   .. py:method:: ax1_update()


   .. py:method:: ax2_update()



.. py:function:: plot_fits(target: Union[list, numpy.ndarray], fit_total: Union[list, numpy.ndarray])


.. py:function:: plot_fits_jupyter(target: Union[list, numpy.ndarray], fit: Union[list, numpy.ndarray])


