Search.setIndex({"docnames": ["autoapi/index", "autoapi/par_segmentation/_interactive/index", "autoapi/par_segmentation/_legacy/index", "autoapi/par_segmentation/_model/index", "autoapi/par_segmentation/_tgf_interpolate/index", "autoapi/par_segmentation/funcs/index", "autoapi/par_segmentation/index", "autoapi/par_segmentation/quantifier/index", "autoapi/par_segmentation/roi/index", "index", "modules", "par_segmentation"], "filenames": ["autoapi/index.rst", "autoapi/par_segmentation/_interactive/index.rst", "autoapi/par_segmentation/_legacy/index.rst", "autoapi/par_segmentation/_model/index.rst", "autoapi/par_segmentation/_tgf_interpolate/index.rst", "autoapi/par_segmentation/funcs/index.rst", "autoapi/par_segmentation/index.rst", "autoapi/par_segmentation/quantifier/index.rst", "autoapi/par_segmentation/roi/index.rst", "index.rst", "modules.rst", "par_segmentation.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._interactive</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._legacy</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation._tgf_interpolate</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation.funcs</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation.quantifier</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">par_segmentation.roi</span></code>", "Welcome to par-segmentation\u2019s documentation!", "par_segmentation", "par_segmentation package"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11], "page": [0, 9], "contain": [0, 2, 4, 5, 6, 7, 8, 11], "auto": 0, "gener": 0, "document": 0, "1": [0, 2, 4, 5, 6, 7, 8, 11], "par_segment": [0, 9], "_interact": [0, 6], "_legaci": [0, 6], "_model": [0, 6], "_tgf_interpol": [0, 6], "func": [0, 6, 10], "quantifi": [0, 6, 10], "roi": [0, 1, 2, 3, 5, 6, 7, 10], "creat": [0, 2, 5, 6, 7, 11], "sphinx": 0, "autoapi": 0, "view_stack_tk": [1, 6], "frame": [1, 3, 6, 8, 11], "union": [1, 2, 3, 4, 5, 6, 7, 8, 11], "list": [1, 2, 3, 4, 5, 6, 7, 8, 11], "numpi": [1, 2, 3, 5, 6, 7, 8, 11], "ndarrai": [1, 2, 3, 5, 6, 7, 8, 11], "start_fram": [1, 6, 8, 11], "int": [1, 2, 3, 4, 5, 6, 7, 8, 11], "0": [1, 2, 3, 4, 5, 6, 7, 8, 11], "end_fram": [1, 6, 8, 11], "option": [1, 2, 4, 5, 6, 7, 8, 11], "none": [1, 2, 3, 4, 5, 6, 7, 8, 11], "show": [1, 6, 8, 11], "bool": [1, 2, 3, 4, 5, 6, 7, 8, 11], "true": [1, 2, 3, 4, 5, 6, 7, 8, 11], "interact": [1, 6, 7, 11], "stack": [1, 6, 8, 11], "viewer": [1, 6], "arg": [1, 2, 4, 5, 6, 7, 8, 11], "either": [1, 2, 3, 6], "arrai": [1, 2, 5, 6, 7, 8, 11], "2d": [1, 5, 6, 8, 11], "imag": [1, 2, 3, 5, 6, 7, 8, 11], "If": [1, 4, 5, 6, 7, 11], "spefici": [1, 3, 6], "onli": [1, 4, 5, 6, 11], "after": [1, 2, 3, 6], "index": [1, 5, 6, 7, 8, 9, 11], "specifi": [1, 2, 3, 5, 6, 7, 8, 11], "befor": [1, 5, 6, 11], "return": [1, 2, 4, 5, 6, 7, 8, 11], "figur": [1, 6], "axi": [1, 2, 4, 5, 6, 7, 11], "view_stack_jupyt": [1, 6], "view_stack": [1, 6], "plot_segment": [1, 6, 7, 10, 11], "plot": [1, 6, 7, 11], "segment": [1, 2, 6, 7, 11], "result": [1, 2, 4, 6, 7, 11], "singl": [1, 3, 5, 6, 7, 11], "two": [1, 2, 5, 6, 7, 8, 11], "column": [1, 2, 5, 6, 7, 8, 11], "coordin": [1, 2, 3, 5, 6, 7, 8, 11], "plot_segmentation_jupyt": [1, 6], "us": [1, 2, 4, 5, 6, 7, 8, 11], "jupyt": [1, 6, 8, 11], "notebook": [1, 5, 6, 8, 11], "environ": [1, 6], "plot_quantif": [1, 6, 7, 10, 11], "mem": [1, 5, 6, 11], "quantif": [1, 2, 6, 7, 11], "membran": [1, 2, 3, 5, 6, 7, 11], "concentr": [1, 3, 5, 6, 7, 11], "one": [1, 4, 5, 6, 7, 8, 11], "multipl": [1, 6, 7, 11], "plot_quantification_jupyt": [1, 6], "_fitplott": [1, 6], "target": [1, 6], "fit": [1, 2, 3, 6, 7, 8, 11], "update_po": [1, 6], "p": [1, 6], "float": [1, 2, 3, 4, 5, 6, 7, 8, 11], "update_fram": [1, 6], "i": [1, 2, 3, 4, 5, 6, 7, 8, 11], "ax1_upd": [1, 6], "ax2_upd": [1, 6], "plot_fit": [1, 6, 7, 10, 11], "fit_tot": [1, 6], "plot_fits_jupyt": [1, 6], "imagequantdifferentialevolutionsingl": [2, 6], "img": [2, 3, 5, 6, 7, 8, 11], "sigma": [2, 3, 6, 7, 11], "2": [2, 3, 4, 6, 7, 8, 11], "freedom": [2, 3, 6, 7, 11], "5": [2, 3, 6, 7, 11], "period": [2, 3, 5, 6, 7, 8, 11], "thick": [2, 3, 5, 6, 7, 11], "50": [2, 3, 6, 7, 11], "itp": [2, 6, 7, 11], "10": [2, 3, 6, 7, 11], "rol_av": [2, 3, 6, 7, 11], "parallel": [2, 6, 7, 11], "fals": [2, 3, 4, 5, 6, 7, 11], "core": [2, 6, 7, 11], "rotat": [2, 3, 5, 6, 7, 11], "zerocap": [2, 3, 6, 7, 11], "nfit": [2, 3, 6, 7, 11], "iter": [2, 3, 6, 7, 11], "interp": [2, 5, 6, 7, 11], "str": [2, 4, 5, 6, 7, 11], "cubic": [2, 4, 5, 6, 7, 8, 11], "bg_subtract": [2, 6, 7, 11], "work": [2, 5, 6, 7, 11], "take": [2, 5, 6, 11], "cross": [2, 6, 7, 11], "section": [2, 6, 7, 11], "across": [2, 5, 6, 11], "profil": [2, 5, 6, 7, 11], "sum": [2, 6], "cytoplasm": [2, 3, 6], "signal": [2, 6], "compon": [2, 6], "differenti": [2, 6, 7, 11], "evolut": [2, 6, 7, 11], "algorithm": [2, 6], "input": [2, 4, 5, 6, 8, 11], "data": [2, 5, 6, 11], "background": [2, 6], "curv": [2, 6, 7, 11], "abov": [2, 6], "ar": [2, 4, 5, 6, 7, 8, 11], "assum": [2, 4, 6], "gaussian": [2, 6, 7, 11], "error": [2, 4, 6, 7, 11], "width": [2, 5, 6, 7, 11], "set": [2, 4, 5, 6, 8, 11], "defin": [2, 4, 6, 7, 8, 11], "cortex": [2, 6, 7, 8, 11], "can": [2, 3, 5, 6, 7, 8, 11], "output": [2, 5, 6, 7, 11], "from": [2, 4, 5, 6, 11], "def_roi": [2, 6, 8, 10, 11], "paramet": [2, 5, 6, 8, 11], "amount": [2, 6, 7, 11], "allow": [2, 6, 7, 11], "pixel": [2, 5, 6, 7, 8, 11], "unit": [2, 5, 6, 7, 8, 11], "form": [2, 6, 7, 11], "close": [2, 4, 6, 7, 8, 11], "loop": [2, 5, 6, 7, 11], "over": [2, 5, 6, 7, 11], "which": [2, 4, 5, 6, 7, 11], "perform": [2, 5, 6, 7, 11], "interpol": [2, 3, 4, 5, 6, 7, 8, 11], "prior": [2, 6, 7, 11], "mani": [2, 5, 6, 7, 11], "point": [2, 4, 5, 6, 7, 8, 11], "per": [2, 6], "origin": [2, 6], "roll": [2, 3, 5, 6, 7, 11], "averag": [2, 3, 5, 6, 7, 11], "automat": [2, 6, 7, 11], "so": [2, 5, 6, 7, 11], "first": [2, 5, 6, 7, 8, 11], "last": [2, 4, 6, 7, 8, 11], "end": [2, 5, 6, 7, 11], "long": [2, 5, 6, 7, 11], "prevent": [2, 6], "neg": [2, 6, 7, 11], "memban": [2, 6], "valu": [2, 3, 4, 5, 6, 7, 11], "regular": [2, 6, 7, 11], "interv": [2, 4, 5, 6, 7, 11], "around": [2, 6, 7, 11], "adjust": [2, 6, 7, 8, 11], "re": [2, 6, 7, 8, 11], "type": [2, 4, 5, 6, 7, 11], "linear": [2, 4, 5, 6, 7, 8, 11], "estim": [2, 3, 6], "subtract": [2, 6], "comput": [2, 5, 6, 11], "number": [2, 4, 5, 6, 7, 8, 11], "all": [2, 4, 5, 6, 7, 11], "avail": [2, 6], "save": [2, 5, 6, 7, 8, 10, 11], "save_path": [2, 6, 7, 11], "destin": [2, 6], "doesn": [2, 5, 6, 11], "t": [2, 5, 6, 7, 11], "alreadi": [2, 6], "exist": [2, 6], "run": [2, 3, 5, 6, 7, 8, 10, 11], "_fit_profil": [2, 6], "tupl": [2, 3, 4, 5, 6, 11], "_mse": [2, 6], "l_c_m": [2, 6], "sim_imag": [2, 3, 6], "simul": [2, 3, 6], "base": [2, 4, 5, 6, 11], "adjust_roi": [2, 3, 6], "do": [2, 3, 6], "preliminari": [2, 3, 6], "refin": [2, 3, 6], "must": [2, 3, 4, 6], "refit": [2, 3, 6], "reset": [2, 6], "entir": [2, 6], "its": [2, 6], "initi": [2, 6], "state": [2, 6], "reset_r": [2, 6], "clear": [2, 6], "imagequantdifferentialevolutionmulti": [2, 6], "verbos": [2, 3, 6, 7, 11], "gau": [2, 6], "x": [2, 5, 6, 7, 8, 11], "centr": [2, 6], "error_func": [2, 6], "polycrop": [2, 6], "polylin": [2, 6], "enlarg": [2, 6], "crop": [2, 6], "accord": [2, 3, 5, 6, 8, 11], "within": [2, 5, 6, 11], "zero": [2, 3, 4, 6], "bound": [2, 4, 5, 6, 11], "region": [2, 5, 6, 11], "y": [2, 5, 6, 7, 8, 11], "expand": [2, 5, 6, 11], "contract": [2, 6], "same": [2, 4, 5, 6, 8, 11], "shape": [2, 4, 5, 6, 8, 11], "outsid": [2, 6], "band": [2, 6], "25": [2, 6, 7, 11], "75": [2, 6], "intens": [2, 5, 6, 11], "an": [2, 4, 5, 6, 7, 11], "cell": [2, 5, 6, 8, 11], "calcul": [2, 5, 6, 11], "mean": [2, 5, 6, 11], "surrond": [2, 6], "boundari": [2, 5, 6, 8, 11], "inner": [2, 6], "outer": [2, 6, 7, 11], "distanc": [2, 5, 6, 8, 11], "calc_vol": [2, 6], "normcoor": [2, 6], "calc_sa": [2, 6], "imagequantgradientdesc": [3, 6], "3": [3, 4, 5, 6, 7, 8, 11], "100": [3, 6, 7, 11], "lr": [3, 6, 7, 11], "01": [3, 6, 7, 11], "descent_step": [3, 6, 7, 11], "300": [3, 6], "adaptive_sigma": [3, 6, 7, 11], "batch_norm": [3, 6, 7, 11], "roi_knot": [3, 6, 7, 11], "20": [3, 6, 7, 11], "fit_out": [3, 6, 7, 11], "save_train": [3, 6, 7, 11], "save_sim": [3, 6, 7, 11], "preprocess": [3, 6], "step": [3, 5, 6, 7, 11], "straighten": [3, 5, 6, 10, 11], "appli": [3, 4, 6, 7, 11], "common": [3, 6], "length": [3, 4, 5, 6, 8, 11], "self": [3, 6, 7, 11], "pad": [3, 6], "largest": [3, 6], "normalis": [3, 5, 6, 7, 11], "themselv": [3, 6], "global": [3, 6, 7, 11], "init_tensor": [3, 6], "initialis": [3, 6, 7, 11], "offset": [3, 6, 8, 11], "user": [3, 6, 8, 11], "default": [3, 4, 6], "mai": [3, 6], "train": [3, 6, 7, 11], "tensorflow": [3, 4, 6], "tensor": [3, 4, 6], "current": [3, 6], "losses_ful": [3, 6], "plot_loss": [3, 6, 7, 10, 11], "log": [3, 6, 7, 11], "create_offsets_splin": [3, 6], "offsets_t": [3, 6], "nimag": [3, 6], "tfg": 4, "math": 4, "bspline": 4, "flag": 4, "integ": 4, "tensorlik": [4, 6], "knot": [4, 6, 7, 11], "posit": [4, 6, 7, 11], "degre": [4, 6, 8, 11], "cyclic": [4, 6], "name": [4, 6], "bspline_interpol": [4, 6], "b": [4, 6], "spline": [4, 6, 7, 8, 11], "control": [4, 6], "note": [4, 6], "In": [4, 6], "follow": [4, 6], "a1": [4, 6], "b1": [4, 6], "bk": [4, 6], "batch": [4, 6, 7, 11], "dimens": [4, 5, 6, 11], "A": [4, 5, 6, 7, 8, 11], "c": [4, 6], "where": [4, 5, 6, 11], "between": [4, 6, 8, 11], "d": [4, 6, 7, 11], "non": [4, 5, 6, 11], "4": [4, 6], "enumer": [4, 6], "constant": [4, 6], "whether": [4, 5, 6, 11], "op": [4, 6], "interpolate_with_weight": 4, "weight": [4, 5, 6, 11], "bspline_interpolate_with_weight": 4, "dens": 4, "rais": 4, "valueerror": 4, "equal": 4, "compare_dimens": 4, "ax": [4, 5, 6, 11], "tensor_nam": 4, "compar": 4, "static": 4, "dynam": 4, "": [4, 6, 7, 8, 11], "each": [4, 6, 7, 11], "entri": 4, "should": [4, 5, 6, 11], "correspond": [4, 5, 6, 11], "being": [4, 5, 6, 11], "messag": 4, "thrown": 4, "left": [4, 5, 6, 11], "field": 4, "instead": [4, 6, 7, 11], "have": [4, 5, 6, 11], "unexpect": 4, "given": [4, 5, 6, 11], "out": 4, "check": [4, 5, 6, 11], "fail": 4, "_all_are_equ": 4, "list_of_object": 4, "helper": 4, "item": 4, "_get_dim": 4, "dimension": [4, 5, 6, 11], "_check_tensor": 4, "tensors_nam": 4, "_check_typ": 4, "variabl": 4, "variable_nam": 4, "expected_typ": 4, "expect": 4, "_check_tensor_axis_list": 4, "axes_nam": 4, "match": 4, "_fix_ax": 4, "allow_neg": 4, "make": 4, "_give_default_nam": 4, "give": [4, 5, 6, 11], "object": [4, 11], "enum": 4, "intenum": 4, "valid": 4, "quadrat": 4, "quartic": 4, "_constant": 4, "basi": 4, "rang": 4, "_linear": 4, "_quadrat": 4, "_cubic": 4, "_quartic": 4, "knot_weight": 4, "num_knot": 4, "sparse_mod": 4, "bspline_knot_weight": 4, "convert": 4, "cardin": 4, "strictli": 4, "describ": 4, "smaller": 4, "than": [4, 6, 7, 11], "nonzero": [4, 6, 7, 11], "well": 4, "indic": [4, 5, 6, 11], "otherwis": [4, 6, 8, 11], "tf": 4, "int32": 4, "greater": 4, "less": 4, "invalidargumenterror": 4, "right": [4, 5, 6, 11], "tfg_add_asserts_to_graph": 4, "assert_all_in_rang": 4, "vector": 4, "minval": 4, "maxval": 4, "open_bound": 4, "we": 4, "want": 4, "repres": [4, 5, 6, 11], "desir": [4, 6, 8, 11], "lower": 4, "upper": 4, "open": [4, 6, 7, 11], "The": [4, 5, 6, 7, 11], "depend": [4, 6, 8, 11], "assert": 4, "oper": 4, "graph": 4, "load_imag": [5, 6, 10, 11], "filenam": [5, 6, 8, 11], "tiff": [5, 6, 11], "full": [5, 6, 7, 11], "path": [5, 6, 7, 11], "file": [5, 6, 7, 11], "import": [5, 6, 11], "includ": [5, 6, 11], "extens": [5, 6, 11], "save_img": [5, 6, 10, 11], "direc": [5, 6, 11], "tif": [5, 6, 7, 11], "save_img_jpeg": [5, 6, 10, 11], "cmin": [5, 6, 11], "cmax": [5, 6, 11], "cmap": [5, 6, 11], "grai": [5, 6, 11], "jpeg": [5, 6, 11], "min": [5, 6, 11], "max": [5, 6, 11], "scale": [5, 6, 11], "along": [5, 6, 11], "colour": [5, 6, 11], "map": [5, 6, 11], "string": [5, 6, 11], "matplotlib": [5, 6, 8, 11], "colormap": [5, 6, 11], "ninterp": [5, 6, 11], "todo": [5, 6, 11], "properli": [5, 6, 11], "apart": [5, 6, 11], "surround": [5, 6, 11], "straight": [5, 6, 8, 11], "evenli": [5, 6, 11], "space": [5, 6, 11], "Will": [5, 6, 11], "unless": [5, 6, 11], "case": [5, 6, 11], "rotated_embryo": [5, 6, 10, 11], "l": [5, 6, 11], "h": [5, 6, 11], "order": [5, 6, 8, 11], "return_roi": [5, 6, 11], "anterior": [5, 6, 11], "posterior": [5, 6, 11], "some": [5, 6, 11], "anticlockwis": [5, 6, 11], "height": [5, 6, 11], "edg": [5, 6, 11], "new": [5, 6, 7, 8, 11], "also": [5, 6, 11], "rotate_roi": [5, 6, 10, 11], "most": [5, 6, 11], "begin": [5, 6, 11], "norm_roi": [5, 6, 10, 11], "align": [5, 6, 7, 11], "interp_1d_arrai": [5, 6, 10, 11], "n": [5, 6, 11], "method": [5, 6, 7, 8, 11], "evalu": [5, 6, 11], "interp_2d_arrai": [5, 6, 10, 11], "row": [5, 6, 11], "rolling_ave_1d": [5, 6, 10, 11], "window": [5, 6, 8, 11], "size": [5, 6, 11], "consecut": [5, 6, 11], "element": [5, 6, 11], "time": [5, 6, 8, 11], "rolling_ave_2d": [5, 6, 10, 11], "bounded_mean_1d": [5, 6, 10, 11], "1d": [5, 6, 11], "add": [5, 6, 11], "combin": [5, 6, 11], "start": [5, 6, 11], "bounded_mean_2d": [5, 6, 10, 11], "asi": [5, 6, 10, 11], "asymmetri": [5, 6, 11], "extrem": [5, 6, 11], "when": [5, 6, 11], "whole": [5, 6, 11], "embryo": [5, 6, 11], "dosag": [5, 6, 10, 11], "One": [5, 6, 11], "wai": [5, 6, 11], "protein": [5, 6, 11], "make_mask": [5, 6, 10, 11], "mask": [5, 6, 11], "binari": [5, 6, 11], "readnd": [5, 6, 10, 11], "dict": [5, 6, 11], "read": [5, 6, 8, 11], "nd": [5, 6, 11], "directori": [5, 6, 11], "folder": [5, 6, 11], "dictionari": [5, 6, 11], "organise_by_nd": [5, 6, 10, 11], "organis": [5, 6, 11], "_direcslist": [5, 6], "dest": [5, 6, 11], "level": [5, 6, 11], "exclud": [5, 6, 11], "exclus": [5, 6, 11], "direcslist": [5, 6, 10, 11], "o": [5, 6, 11], "walk": [5, 6, 11], "parent": [5, 6, 11], "go": [5, 6, 8, 11], "down": [5, 6, 8, 11], "e": [5, 6, 7, 8, 11], "g": [5, 6, 7, 8, 11], "ani": [5, 6, 8, 11], "don": [5, 6, 11], "in_notebook": [5, 6, 10, 11], "test": [5, 6, 11], "python": [5, 6, 8, 11], "http": [5, 6, 11], "stackoverflow": [5, 6, 11], "com": [5, 6, 11], "question": [5, 6, 11], "15411967": [5, 6, 11], "how": [5, 6, 11], "code": [5, 6, 11], "execut": [5, 6, 11], "ipython": [5, 6, 11], "offset_coordin": [6, 8, 10, 11], "np": [6, 8, 11], "loadtxt": [6, 8, 11], "coor": [6, 8, 11], "direct": [6, 8, 11], "format": [6, 8, 11], "To": [6, 8, 11], "fiji": [6, 8, 11], "readabl": [6, 8, 11], "savetxt": [6, 8, 11], "newcoor": [6, 8, 11], "fmt": [6, 8, 11], "4f": [6, 8, 11], "delimit": [6, 8, 11], "interp_roi": [6, 8, 10, 11], "npoint": [6, 8, 11], "gap": [6, 8, 11], "possibl": [6, 8, 11], "altern": [6, 8, 11], "succes": [6, 8, 11], "spline_roi": [6, 8, 10, 11], "k": [6, 8, 11], "splprep": [6, 8, 11], "imagequ": [6, 7, 10, 11], "400": [6, 7, 11], "gd": [6, 7, 11], "main": [6, 7, 11], "instruct": [6, 7, 8, 11], "saibr": [6, 7, 11], "rough": [6, 7, 11], "manual": [6, 7, 11], "found": [6, 7, 11], "compile_r": [6, 7, 10, 11], "panda": [6, 7, 11], "datafram": [6, 7, 11], "move": [6, 7, 11], "rather": [6, 7, 11], "intern": [6, 7, 11], "shouldn": [6, 7, 11], "affect": [6, 7, 11], "recommend": [6, 7, 11], "dure": [6, 7, 11], "model": [6, 7, 11], "optimis": [6, 7, 11], "portion": [6, 7, 11], "gradient": [6, 7, 11], "descent": [6, 7, 11], "de": [6, 7, 11], "former": [6, 7, 11], "highli": [6, 7, 11], "latter": [6, 7, 11], "much": [6, 7, 11], "slower": [6, 7, 11], "longer": [6, 7, 11], "maintain": [6, 7, 11], "limit": [6, 7, 11], "veri": [6, 7, 11], "weakli": [6, 7, 11], "learn": [6, 7, 11], "rate": [6, 7, 11], "suppress": [6, 7, 11], "onscreen": [6, 7, 11], "while": [6, 7, 11], "progress": [6, 7, 11], "bar": [6, 7, 11], "legaci": [6, 7, 11], "nb": [6, 7, 11], "buggi": [6, 7, 11], "subpixel": [6, 7, 11], "seri": [6, 7, 8, 11], "txt": [6, 7, 11], "compil": [6, 7, 11], "view_fram": [6, 7, 10, 11], "widget": [6, 7, 11], "view": [6, 7, 11], "actual": [6, 7, 11], "v": [6, 7, 11], "loss": [6, 7, 11], "line": [6, 7, 8, 11], "logarithm": [6, 7, 11], "show_fit": [6, 8, 11], "There": [6, 8, 11], "differ": [6, 8, 11], "draw": [6, 8, 11], "you": [6, 8, 11], "normal": [6, 8, 11], "script": [6, 8, 11], "click": [6, 8, 11], "lai": [6, 8, 11], "backspac": [6, 8, 11], "remov": [6, 8, 11], "press": [6, 8, 11], "enter": [6, 8, 11], "select": [6, 8, 11], "area": [6, 8, 11], "back": [6, 8, 11], "again": [6, 8, 11], "3d": [6, 8, 11], "_roi": [6, 8], "_draw_fram": [6, 8], "_button_press_callback": [6, 8], "event": [6, 8], "backend_bas": [6, 8], "mouseev": [6, 8], "_key_press_callback": [6, 8], "keyev": [6, 8], "_display_point": [6, 8], "roi_jupyt": [6, 8, 10, 11], "exampl": [6, 8, 11], "workflow": [6, 8, 11], "r": [6, 8, 11], "roijupyt": [6, 8, 11], "appear": [6, 8, 11], "print": [6, 8, 11], "confirm": [6, 8, 11], "_undo": [6, 8], "_": [6, 8], "_save": [6, 8], "function": [7, 11], "api": 9, "refer": 9, "packag": [9, 10], "modul": [9, 10], "search": 9, "submodul": 10, "content": 10, "class": 11}, "objects": {"": [[11, 0, 0, "-", "par_segmentation"]], "par_segmentation": [[6, 1, 1, "", "ImageQuant"], [6, 1, 1, "id33", "ImageQuantDifferentialEvolutionMulti"], [6, 1, 1, "", "ImageQuantDifferentialEvolutionSingle"], [6, 1, 1, "id24", "ImageQuantGradientDescent"], [6, 1, 1, "", "ROI_jupyter"], [6, 1, 1, "", "_FitPlotter"], [6, 1, 1, "", "_ROI"], [6, 3, 1, "", "_direcslist"], [1, 0, 0, "-", "_interactive"], [2, 0, 0, "-", "_legacy"], [3, 0, 0, "-", "_model"], [4, 0, 0, "-", "_tgf_interpolate"], [6, 3, 1, "", "asi"], [6, 3, 1, "", "bg_subtraction"], [6, 3, 1, "", "bounded_mean_1d"], [6, 3, 1, "", "bounded_mean_2d"], [6, 3, 1, "", "calc_sa"], [6, 3, 1, "", "calc_vol"], [6, 3, 1, "", "create_offsets_spline"], [6, 3, 1, "", "def_roi"], [6, 3, 1, "", "direcslist"], [6, 3, 1, "", "dosage"], [6, 3, 1, "", "error_func"], [11, 0, 0, "-", "funcs"], [6, 3, 1, "", "gaus"], [6, 3, 1, "id15", "in_notebook"], [6, 3, 1, "id9", "interp_1d_array"], [6, 3, 1, "id10", "interp_2d_array"], [6, 3, 1, "id36", "interp_roi"], [6, 3, 1, "", "interpolate"], [6, 3, 1, "", "load_image"], [6, 3, 1, "", "make_mask"], [6, 3, 1, "", "norm_roi"], [6, 3, 1, "id37", "offset_coordinates"], [6, 3, 1, "", "organise_by_nd"], [6, 3, 1, "id18", "plot_fits"], [6, 3, 1, "id19", "plot_fits_jupyter"], [6, 3, 1, "id22", "plot_quantification"], [6, 3, 1, "id23", "plot_quantification_jupyter"], [6, 3, 1, "id20", "plot_segmentation"], [6, 3, 1, "id21", "plot_segmentation_jupyter"], [6, 3, 1, "", "polycrop"], [11, 0, 0, "-", "quantifier"], [6, 3, 1, "", "readnd"], [11, 0, 0, "-", "roi"], [6, 3, 1, "", "rolling_ave_1d"], [6, 3, 1, "id8", "rolling_ave_2d"], [6, 3, 1, "id11", "rotate_roi"], [6, 3, 1, "", "rotated_embryo"], [6, 3, 1, "id14", "save_img"], [6, 3, 1, "", "save_img_jpeg"], [6, 3, 1, "id35", "spline_roi"], [6, 3, 1, "id7", "straighten"], [6, 3, 1, "id16", "view_stack"], [6, 3, 1, "id17", "view_stack_jupyter"], [6, 3, 1, "", "view_stack_tk"]], "par_segmentation.ImageQuant": [[6, 2, 1, "", "compile_res"], [6, 2, 1, "", "plot_fits"], [6, 2, 1, "", "plot_losses"], [6, 2, 1, "", "plot_quantification"], [6, 2, 1, "", "plot_segmentation"], [6, 2, 1, "", "run"], [6, 2, 1, "", "save"], [6, 2, 1, "", "view_frames"]], "par_segmentation.ImageQuantDifferentialEvolutionMulti": [[6, 2, 1, "id34", "run"]], "par_segmentation.ImageQuantDifferentialEvolutionSingle": [[6, 2, 1, "", "_fit_profile"], [6, 2, 1, "", "_mse"], [6, 2, 1, "", "adjust_roi"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "reset_res"], [6, 2, 1, "", "run"], [6, 2, 1, "", "sim_images"]], "par_segmentation.ImageQuantGradientDescent": [[6, 2, 1, "id31", "adjust_roi"], [6, 2, 1, "id30", "fit"], [6, 2, 1, "id27", "init_tensors"], [6, 2, 1, "id29", "losses_full"], [6, 2, 1, "id32", "plot_losses"], [6, 2, 1, "id26", "preprocess"], [6, 2, 1, "id25", "run"], [6, 2, 1, "id28", "sim_images"]], "par_segmentation.ROI_jupyter": [[6, 2, 1, "", "_button_press_callback"], [6, 2, 1, "", "_display_points"], [6, 2, 1, "", "_draw_frame"], [6, 2, 1, "", "_save"], [6, 2, 1, "", "_undo"], [6, 2, 1, "", "run"]], "par_segmentation._FitPlotter": [[6, 2, 1, "", "ax1_update"], [6, 2, 1, "", "ax2_update"], [6, 2, 1, "", "update_frame"], [6, 2, 1, "", "update_pos"]], "par_segmentation._ROI": [[6, 2, 1, "", "_button_press_callback"], [6, 2, 1, "", "_display_points"], [6, 2, 1, "", "_draw_frame"], [6, 2, 1, "", "_key_press_callback"], [6, 2, 1, "", "run"]], "par_segmentation._interactive": [[1, 1, 1, "", "_FitPlotter"], [1, 3, 1, "", "plot_fits"], [1, 3, 1, "", "plot_fits_jupyter"], [1, 3, 1, "", "plot_quantification"], [1, 3, 1, "", "plot_quantification_jupyter"], [1, 3, 1, "", "plot_segmentation"], [1, 3, 1, "", "plot_segmentation_jupyter"], [1, 3, 1, "", "view_stack"], [1, 3, 1, "", "view_stack_jupyter"], [1, 3, 1, "", "view_stack_tk"]], "par_segmentation._interactive._FitPlotter": [[1, 2, 1, "", "ax1_update"], [1, 2, 1, "", "ax2_update"], [1, 2, 1, "", "update_frame"], [1, 2, 1, "", "update_pos"]], "par_segmentation._legacy": [[2, 1, 1, "", "ImageQuantDifferentialEvolutionMulti"], [2, 1, 1, "", "ImageQuantDifferentialEvolutionSingle"], [2, 3, 1, "", "bg_subtraction"], [2, 3, 1, "", "calc_sa"], [2, 3, 1, "", "calc_vol"], [2, 3, 1, "", "error_func"], [2, 3, 1, "", "gaus"], [2, 3, 1, "", "polycrop"]], "par_segmentation._legacy.ImageQuantDifferentialEvolutionMulti": [[2, 2, 1, "", "run"]], "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle": [[2, 2, 1, "", "_fit_profile"], [2, 2, 1, "", "_mse"], [2, 2, 1, "", "adjust_roi"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "reset_res"], [2, 2, 1, "", "run"], [2, 2, 1, "", "sim_images"]], "par_segmentation._model": [[3, 1, 1, "", "ImageQuantGradientDescent"], [3, 3, 1, "", "create_offsets_spline"]], "par_segmentation._model.ImageQuantGradientDescent": [[3, 2, 1, "", "adjust_roi"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "init_tensors"], [3, 2, 1, "", "losses_full"], [3, 2, 1, "", "plot_losses"], [3, 2, 1, "", "preprocess"], [3, 2, 1, "", "run"], [3, 2, 1, "", "sim_images"]], "par_segmentation._tgf_interpolate": [[4, 1, 1, "", "Degree"], [4, 5, 1, "", "FLAGS"], [4, 5, 1, "", "Float"], [4, 5, 1, "", "Integer"], [4, 5, 1, "", "TFG_ADD_ASSERTS_TO_GRAPH"], [4, 5, 1, "", "TensorLike"], [4, 3, 1, "", "_all_are_equal"], [4, 3, 1, "", "_check_tensor_axis_lists"], [4, 3, 1, "", "_check_tensors"], [4, 3, 1, "", "_check_type"], [4, 3, 1, "", "_constant"], [4, 3, 1, "", "_cubic"], [4, 3, 1, "", "_fix_axes"], [4, 3, 1, "", "_get_dim"], [4, 3, 1, "", "_give_default_names"], [4, 3, 1, "", "_linear"], [4, 3, 1, "", "_quadratic"], [4, 3, 1, "", "_quartic"], [4, 3, 1, "", "assert_all_in_range"], [4, 3, 1, "", "compare_dimensions"], [4, 3, 1, "", "interpolate"], [4, 3, 1, "", "interpolate_with_weights"], [4, 3, 1, "", "knot_weights"]], "par_segmentation._tgf_interpolate.Degree": [[4, 4, 1, "", "CONSTANT"], [4, 4, 1, "", "CUBIC"], [4, 4, 1, "", "LINEAR"], [4, 4, 1, "", "QUADRATIC"], [4, 4, 1, "", "QUARTIC"]], "par_segmentation.funcs": [[5, 3, 1, "", "_direcslist"], [11, 3, 1, "", "asi"], [11, 3, 1, "", "bounded_mean_1d"], [11, 3, 1, "", "bounded_mean_2d"], [11, 3, 1, "", "direcslist"], [11, 3, 1, "", "dosage"], [11, 3, 1, "", "in_notebook"], [11, 3, 1, "", "interp_1d_array"], [11, 3, 1, "", "interp_2d_array"], [11, 3, 1, "", "load_image"], [11, 3, 1, "", "make_mask"], [11, 3, 1, "", "norm_roi"], [11, 3, 1, "", "organise_by_nd"], [11, 3, 1, "", "readnd"], [11, 3, 1, "", "rolling_ave_1d"], [11, 3, 1, "", "rolling_ave_2d"], [11, 3, 1, "", "rotate_roi"], [11, 3, 1, "", "rotated_embryo"], [11, 3, 1, "", "save_img"], [11, 3, 1, "", "save_img_jpeg"], [11, 3, 1, "", "straighten"]], "par_segmentation.quantifier": [[11, 1, 1, "", "ImageQuant"]], "par_segmentation.quantifier.ImageQuant": [[11, 2, 1, "", "compile_res"], [11, 2, 1, "", "plot_fits"], [11, 2, 1, "", "plot_losses"], [11, 2, 1, "", "plot_quantification"], [11, 2, 1, "", "plot_segmentation"], [11, 2, 1, "", "run"], [11, 2, 1, "", "save"], [11, 2, 1, "", "view_frames"]], "par_segmentation.roi": [[11, 1, 1, "", "ROI_jupyter"], [8, 1, 1, "", "_ROI"], [11, 3, 1, "", "def_roi"], [11, 3, 1, "", "interp_roi"], [11, 3, 1, "", "offset_coordinates"], [11, 3, 1, "", "spline_roi"]], "par_segmentation.roi.ROI_jupyter": [[8, 2, 1, "", "_button_press_callback"], [8, 2, 1, "", "_display_points"], [8, 2, 1, "", "_draw_frame"], [8, 2, 1, "", "_save"], [8, 2, 1, "", "_undo"], [11, 2, 1, "", "run"]], "par_segmentation.roi._ROI": [[8, 2, 1, "", "_button_press_callback"], [8, 2, 1, "", "_display_points"], [8, 2, 1, "", "_draw_frame"], [8, 2, 1, "", "_key_press_callback"], [8, 2, 1, "", "run"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "data", "Python data"]}, "titleterms": {"api": 0, "refer": 0, "par_segment": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11], "_interact": 1, "modul": [1, 2, 3, 4, 5, 7, 8, 11], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], "class": [1, 2, 3, 4, 6, 7, 8], "function": [1, 2, 3, 4, 5, 6, 8], "_legaci": 2, "_model": 3, "_tgf_interpol": 4, "attribut": 4, "func": [5, 11], "submodul": [6, 11], "packag": [6, 11], "quantifi": [7, 11], "roi": [8, 11], "welcom": 9, "par": 9, "segment": 9, "": 9, "document": 9, "indic": 9, "tabl": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "par_segmentation._interactive": [[1, "module-par_segmentation._interactive"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [6, "classes"], [7, "classes"], [8, "classes"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [5, "functions"], [6, "functions"], [8, "functions"]], "par_segmentation._legacy": [[2, "module-par_segmentation._legacy"]], "par_segmentation._model": [[3, "module-par_segmentation._model"]], "par_segmentation._tgf_interpolate": [[4, "module-par_segmentation._tgf_interpolate"]], "Attributes": [[4, "attributes"]], "par_segmentation.funcs": [[5, "module-par_segmentation.funcs"]], "par_segmentation": [[6, "module-par_segmentation"], [10, "par-segmentation"]], "Submodules": [[6, "submodules"], [11, "submodules"]], "Package Contents": [[6, "package-contents"]], "par_segmentation.quantifier": [[7, "module-par_segmentation.quantifier"]], "par_segmentation.roi": [[8, "module-par_segmentation.roi"]], "Welcome to par-segmentation\u2019s documentation!": [[9, "welcome-to-par-segmentation-s-documentation"]], "Contents:": [[9, null]], "Indices and tables": [[9, "indices-and-tables"]], "par_segmentation package": [[11, "par-segmentation-package"]], "par_segmentation.funcs module": [[11, "module-par_segmentation.funcs"]], "par_segmentation.quantifier module": [[11, "module-par_segmentation.quantifier"]], "par_segmentation.roi module": [[11, "module-par_segmentation.roi"]], "Module contents": [[11, "module-par_segmentation"]]}, "indexentries": {"_fitplotter (class in par_segmentation._interactive)": [[1, "par_segmentation._interactive._FitPlotter"]], "ax1_update() (par_segmentation._interactive._fitplotter method)": [[1, "par_segmentation._interactive._FitPlotter.ax1_update"]], "ax2_update() (par_segmentation._interactive._fitplotter method)": [[1, "par_segmentation._interactive._FitPlotter.ax2_update"]], "module": [[1, "module-par_segmentation._interactive"], [2, "module-par_segmentation._legacy"], [3, "module-par_segmentation._model"], [4, "module-par_segmentation._tgf_interpolate"], [5, "module-par_segmentation.funcs"], [6, "module-par_segmentation"], [7, "module-par_segmentation.quantifier"], [8, "module-par_segmentation.roi"], [11, "module-par_segmentation"], [11, "module-par_segmentation.funcs"], [11, "module-par_segmentation.quantifier"], [11, "module-par_segmentation.roi"]], "par_segmentation._interactive": [[1, "module-par_segmentation._interactive"]], "plot_fits() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_fits"]], "plot_fits_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_fits_jupyter"]], "plot_quantification() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_quantification"]], "plot_quantification_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_quantification_jupyter"]], "plot_segmentation() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_segmentation"]], "plot_segmentation_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.plot_segmentation_jupyter"]], "update_frame() (par_segmentation._interactive._fitplotter method)": [[1, "par_segmentation._interactive._FitPlotter.update_frame"]], "update_pos() (par_segmentation._interactive._fitplotter method)": [[1, "par_segmentation._interactive._FitPlotter.update_pos"]], "view_stack() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.view_stack"]], "view_stack_jupyter() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.view_stack_jupyter"]], "view_stack_tk() (in module par_segmentation._interactive)": [[1, "par_segmentation._interactive.view_stack_tk"]], "imagequantdifferentialevolutionmulti (class in par_segmentation._legacy)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionMulti"]], "imagequantdifferentialevolutionsingle (class in par_segmentation._legacy)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle"]], "_fit_profile() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle._fit_profile"]], "_mse() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle._mse"]], "adjust_roi() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.adjust_roi"]], "bg_subtraction() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.bg_subtraction"]], "calc_sa() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.calc_sa"]], "calc_vol() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.calc_vol"]], "error_func() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.error_func"]], "fit() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.fit"]], "gaus() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.gaus"]], "par_segmentation._legacy": [[2, "module-par_segmentation._legacy"]], "polycrop() (in module par_segmentation._legacy)": [[2, "par_segmentation._legacy.polycrop"]], "reset() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.reset"]], "reset_res() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.reset_res"]], "run() (par_segmentation._legacy.imagequantdifferentialevolutionmulti method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionMulti.run"]], "run() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.run"]], "sim_images() (par_segmentation._legacy.imagequantdifferentialevolutionsingle method)": [[2, "par_segmentation._legacy.ImageQuantDifferentialEvolutionSingle.sim_images"]], "imagequantgradientdescent (class in par_segmentation._model)": [[3, "par_segmentation._model.ImageQuantGradientDescent"]], "adjust_roi() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.adjust_roi"]], "create_offsets_spline() (in module par_segmentation._model)": [[3, "par_segmentation._model.create_offsets_spline"]], "fit() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.fit"]], "init_tensors() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.init_tensors"]], "losses_full() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.losses_full"]], "par_segmentation._model": [[3, "module-par_segmentation._model"]], "plot_losses() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.plot_losses"]], "preprocess() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.preprocess"]], "run() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.run"]], "sim_images() (par_segmentation._model.imagequantgradientdescent method)": [[3, "par_segmentation._model.ImageQuantGradientDescent.sim_images"]], "constant (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.CONSTANT"]], "cubic (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.CUBIC"]], "degree (class in par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.Degree"]], "flags (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.FLAGS"]], "float (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.Float"]], "integer (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.Integer"]], "linear (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.LINEAR"]], "quadratic (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.QUADRATIC"]], "quartic (par_segmentation._tgf_interpolate.degree attribute)": [[4, "par_segmentation._tgf_interpolate.Degree.QUARTIC"]], "tfg_add_asserts_to_graph (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.TFG_ADD_ASSERTS_TO_GRAPH"]], "tensorlike (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.TensorLike"]], "_all_are_equal() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._all_are_equal"]], "_check_tensor_axis_lists() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._check_tensor_axis_lists"]], "_check_tensors() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._check_tensors"]], "_check_type() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._check_type"]], "_constant() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._constant"]], "_cubic() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._cubic"]], "_fix_axes() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._fix_axes"]], "_get_dim() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._get_dim"]], "_give_default_names() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._give_default_names"]], "_linear() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._linear"]], "_quadratic() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._quadratic"]], "_quartic() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate._quartic"]], "assert_all_in_range() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.assert_all_in_range"]], "compare_dimensions() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.compare_dimensions"]], "interpolate() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.interpolate"]], "interpolate_with_weights() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.interpolate_with_weights"]], "knot_weights() (in module par_segmentation._tgf_interpolate)": [[4, "par_segmentation._tgf_interpolate.knot_weights"]], "par_segmentation._tgf_interpolate": [[4, "module-par_segmentation._tgf_interpolate"]], "_direcslist() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs._direcslist"]], "asi() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.asi"], [11, "par_segmentation.funcs.asi"]], "bounded_mean_1d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.bounded_mean_1d"], [11, "par_segmentation.funcs.bounded_mean_1d"]], "bounded_mean_2d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.bounded_mean_2d"], [11, "par_segmentation.funcs.bounded_mean_2d"]], "direcslist() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.direcslist"], [11, "par_segmentation.funcs.direcslist"]], "dosage() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.dosage"], [11, "par_segmentation.funcs.dosage"]], "in_notebook() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.in_notebook"], [11, "par_segmentation.funcs.in_notebook"]], "interp_1d_array() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.interp_1d_array"], [11, "par_segmentation.funcs.interp_1d_array"]], "interp_2d_array() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.interp_2d_array"], [11, "par_segmentation.funcs.interp_2d_array"]], "load_image() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.load_image"], [11, "par_segmentation.funcs.load_image"]], "make_mask() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.make_mask"], [11, "par_segmentation.funcs.make_mask"]], "norm_roi() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.norm_roi"], [11, "par_segmentation.funcs.norm_roi"]], "organise_by_nd() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.organise_by_nd"], [11, "par_segmentation.funcs.organise_by_nd"]], "par_segmentation.funcs": [[5, "module-par_segmentation.funcs"], [11, "module-par_segmentation.funcs"]], "readnd() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.readnd"], [11, "par_segmentation.funcs.readnd"]], "rolling_ave_1d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rolling_ave_1d"], [11, "par_segmentation.funcs.rolling_ave_1d"]], "rolling_ave_2d() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rolling_ave_2d"], [11, "par_segmentation.funcs.rolling_ave_2d"]], "rotate_roi() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rotate_roi"], [11, "par_segmentation.funcs.rotate_roi"]], "rotated_embryo() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.rotated_embryo"], [11, "par_segmentation.funcs.rotated_embryo"]], "save_img() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.save_img"], [11, "par_segmentation.funcs.save_img"]], "save_img_jpeg() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.save_img_jpeg"], [11, "par_segmentation.funcs.save_img_jpeg"]], "straighten() (in module par_segmentation.funcs)": [[5, "par_segmentation.funcs.straighten"], [11, "par_segmentation.funcs.straighten"]], "imagequant (class in par_segmentation)": [[6, "par_segmentation.ImageQuant"]], "imagequantdifferentialevolutionmulti (class in par_segmentation)": [[6, "id33"], [6, "par_segmentation.ImageQuantDifferentialEvolutionMulti"]], "imagequantdifferentialevolutionsingle (class in par_segmentation)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle"]], "imagequantgradientdescent (class in par_segmentation)": [[6, "id24"], [6, "par_segmentation.ImageQuantGradientDescent"]], "roi_jupyter (class in par_segmentation)": [[6, "par_segmentation.ROI_jupyter"]], "_fitplotter (class in par_segmentation)": [[6, "par_segmentation._FitPlotter"]], "_roi (class in par_segmentation)": [[6, "par_segmentation._ROI"]], "_button_press_callback() (par_segmentation.roi_jupyter method)": [[6, "par_segmentation.ROI_jupyter._button_press_callback"]], "_button_press_callback() (par_segmentation._roi method)": [[6, "par_segmentation._ROI._button_press_callback"]], "_direcslist() (in module par_segmentation)": [[6, "par_segmentation._direcslist"]], "_display_points() (par_segmentation.roi_jupyter method)": [[6, "par_segmentation.ROI_jupyter._display_points"]], "_display_points() (par_segmentation._roi method)": [[6, "par_segmentation._ROI._display_points"]], "_draw_frame() (par_segmentation.roi_jupyter method)": [[6, "par_segmentation.ROI_jupyter._draw_frame"]], "_draw_frame() (par_segmentation._roi method)": [[6, "par_segmentation._ROI._draw_frame"]], "_fit_profile() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle._fit_profile"]], "_key_press_callback() (par_segmentation._roi method)": [[6, "par_segmentation._ROI._key_press_callback"]], "_mse() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle._mse"]], "_save() (par_segmentation.roi_jupyter method)": [[6, "par_segmentation.ROI_jupyter._save"]], "_undo() (par_segmentation.roi_jupyter method)": [[6, "par_segmentation.ROI_jupyter._undo"]], "adjust_roi() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.adjust_roi"]], "adjust_roi() (par_segmentation.imagequantgradientdescent method)": [[6, "id31"], [6, "par_segmentation.ImageQuantGradientDescent.adjust_roi"]], "asi() (in module par_segmentation)": [[6, "par_segmentation.asi"]], "ax1_update() (par_segmentation._fitplotter method)": [[6, "par_segmentation._FitPlotter.ax1_update"]], "ax2_update() (par_segmentation._fitplotter method)": [[6, "par_segmentation._FitPlotter.ax2_update"]], "bg_subtraction() (in module par_segmentation)": [[6, "par_segmentation.bg_subtraction"]], "bounded_mean_1d() (in module par_segmentation)": [[6, "par_segmentation.bounded_mean_1d"]], "bounded_mean_2d() (in module par_segmentation)": [[6, "par_segmentation.bounded_mean_2d"]], "calc_sa() (in module par_segmentation)": [[6, "par_segmentation.calc_sa"]], "calc_vol() (in module par_segmentation)": [[6, "par_segmentation.calc_vol"]], "compile_res() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.compile_res"]], "create_offsets_spline() (in module par_segmentation)": [[6, "par_segmentation.create_offsets_spline"]], "def_roi() (in module par_segmentation)": [[6, "par_segmentation.def_roi"]], "direcslist() (in module par_segmentation)": [[6, "par_segmentation.direcslist"]], "dosage() (in module par_segmentation)": [[6, "par_segmentation.dosage"]], "error_func() (in module par_segmentation)": [[6, "par_segmentation.error_func"]], "fit() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.fit"]], "fit() (par_segmentation.imagequantgradientdescent method)": [[6, "id30"], [6, "par_segmentation.ImageQuantGradientDescent.fit"]], "gaus() (in module par_segmentation)": [[6, "par_segmentation.gaus"]], "in_notebook() (in module par_segmentation)": [[6, "id0"], [6, "id15"], [6, "par_segmentation.in_notebook"]], "init_tensors() (par_segmentation.imagequantgradientdescent method)": [[6, "id27"], [6, "par_segmentation.ImageQuantGradientDescent.init_tensors"]], "interp_1d_array() (in module par_segmentation)": [[6, "id3"], [6, "id9"], [6, "par_segmentation.interp_1d_array"]], "interp_2d_array() (in module par_segmentation)": [[6, "id10"], [6, "id4"], [6, "par_segmentation.interp_2d_array"]], "interp_roi() (in module par_segmentation)": [[6, "id12"], [6, "id36"], [6, "par_segmentation.interp_roi"]], "interpolate() (in module par_segmentation)": [[6, "par_segmentation.interpolate"]], "load_image() (in module par_segmentation)": [[6, "par_segmentation.load_image"]], "losses_full() (par_segmentation.imagequantgradientdescent method)": [[6, "id29"], [6, "par_segmentation.ImageQuantGradientDescent.losses_full"]], "make_mask() (in module par_segmentation)": [[6, "par_segmentation.make_mask"]], "norm_roi() (in module par_segmentation)": [[6, "par_segmentation.norm_roi"]], "offset_coordinates() (in module par_segmentation)": [[6, "id13"], [6, "id37"], [6, "id6"], [6, "par_segmentation.offset_coordinates"]], "organise_by_nd() (in module par_segmentation)": [[6, "par_segmentation.organise_by_nd"]], "par_segmentation": [[6, "module-par_segmentation"], [11, "module-par_segmentation"]], "plot_fits() (in module par_segmentation)": [[6, "id18"], [6, "par_segmentation.plot_fits"]], "plot_fits() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_fits"]], "plot_fits_jupyter() (in module par_segmentation)": [[6, "id19"], [6, "par_segmentation.plot_fits_jupyter"]], "plot_losses() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_losses"]], "plot_losses() (par_segmentation.imagequantgradientdescent method)": [[6, "id32"], [6, "par_segmentation.ImageQuantGradientDescent.plot_losses"]], "plot_quantification() (in module par_segmentation)": [[6, "id22"], [6, "par_segmentation.plot_quantification"]], "plot_quantification() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_quantification"]], "plot_quantification_jupyter() (in module par_segmentation)": [[6, "id23"], [6, "par_segmentation.plot_quantification_jupyter"]], "plot_segmentation() (in module par_segmentation)": [[6, "id20"], [6, "par_segmentation.plot_segmentation"]], "plot_segmentation() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.plot_segmentation"]], "plot_segmentation_jupyter() (in module par_segmentation)": [[6, "id21"], [6, "par_segmentation.plot_segmentation_jupyter"]], "polycrop() (in module par_segmentation)": [[6, "par_segmentation.polycrop"]], "preprocess() (par_segmentation.imagequantgradientdescent method)": [[6, "id26"], [6, "par_segmentation.ImageQuantGradientDescent.preprocess"]], "readnd() (in module par_segmentation)": [[6, "par_segmentation.readnd"]], "reset() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.reset"]], "reset_res() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.reset_res"]], "rolling_ave_1d() (in module par_segmentation)": [[6, "par_segmentation.rolling_ave_1d"]], "rolling_ave_2d() (in module par_segmentation)": [[6, "id2"], [6, "id8"], [6, "par_segmentation.rolling_ave_2d"]], "rotate_roi() (in module par_segmentation)": [[6, "id11"], [6, "id5"], [6, "par_segmentation.rotate_roi"]], "rotated_embryo() (in module par_segmentation)": [[6, "par_segmentation.rotated_embryo"]], "run() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.run"]], "run() (par_segmentation.imagequantdifferentialevolutionmulti method)": [[6, "id34"], [6, "par_segmentation.ImageQuantDifferentialEvolutionMulti.run"]], "run() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.run"]], "run() (par_segmentation.imagequantgradientdescent method)": [[6, "id25"], [6, "par_segmentation.ImageQuantGradientDescent.run"]], "run() (par_segmentation.roi_jupyter method)": [[6, "par_segmentation.ROI_jupyter.run"]], "run() (par_segmentation._roi method)": [[6, "par_segmentation._ROI.run"]], "save() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.save"]], "save_img() (in module par_segmentation)": [[6, "id14"], [6, "par_segmentation.save_img"]], "save_img_jpeg() (in module par_segmentation)": [[6, "par_segmentation.save_img_jpeg"]], "sim_images() (par_segmentation.imagequantdifferentialevolutionsingle method)": [[6, "par_segmentation.ImageQuantDifferentialEvolutionSingle.sim_images"]], "sim_images() (par_segmentation.imagequantgradientdescent method)": [[6, "id28"], [6, "par_segmentation.ImageQuantGradientDescent.sim_images"]], "spline_roi() (in module par_segmentation)": [[6, "id35"], [6, "par_segmentation.spline_roi"]], "straighten() (in module par_segmentation)": [[6, "id1"], [6, "id7"], [6, "par_segmentation.straighten"]], "update_frame() (par_segmentation._fitplotter method)": [[6, "par_segmentation._FitPlotter.update_frame"]], "update_pos() (par_segmentation._fitplotter method)": [[6, "par_segmentation._FitPlotter.update_pos"]], "view_frames() (par_segmentation.imagequant method)": [[6, "par_segmentation.ImageQuant.view_frames"]], "view_stack() (in module par_segmentation)": [[6, "id16"], [6, "par_segmentation.view_stack"]], "view_stack_jupyter() (in module par_segmentation)": [[6, "id17"], [6, "par_segmentation.view_stack_jupyter"]], "view_stack_tk() (in module par_segmentation)": [[6, "par_segmentation.view_stack_tk"]], "imagequant (class in par_segmentation.quantifier)": [[7, "par_segmentation.quantifier.ImageQuant"], [11, "par_segmentation.quantifier.ImageQuant"]], "compile_res() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.compile_res"], [11, "par_segmentation.quantifier.ImageQuant.compile_res"]], "par_segmentation.quantifier": [[7, "module-par_segmentation.quantifier"], [11, "module-par_segmentation.quantifier"]], "plot_fits() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_fits"], [11, "par_segmentation.quantifier.ImageQuant.plot_fits"]], "plot_losses() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_losses"], [11, "par_segmentation.quantifier.ImageQuant.plot_losses"]], "plot_quantification() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_quantification"], [11, "par_segmentation.quantifier.ImageQuant.plot_quantification"]], "plot_segmentation() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.plot_segmentation"], [11, "par_segmentation.quantifier.ImageQuant.plot_segmentation"]], "run() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.run"], [11, "par_segmentation.quantifier.ImageQuant.run"]], "save() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.save"], [11, "par_segmentation.quantifier.ImageQuant.save"]], "view_frames() (par_segmentation.quantifier.imagequant method)": [[7, "par_segmentation.quantifier.ImageQuant.view_frames"], [11, "par_segmentation.quantifier.ImageQuant.view_frames"]], "roi_jupyter (class in par_segmentation.roi)": [[8, "par_segmentation.roi.ROI_jupyter"], [11, "par_segmentation.roi.ROI_jupyter"]], "_roi (class in par_segmentation.roi)": [[8, "par_segmentation.roi._ROI"]], "_button_press_callback() (par_segmentation.roi.roi_jupyter method)": [[8, "par_segmentation.roi.ROI_jupyter._button_press_callback"]], "_button_press_callback() (par_segmentation.roi._roi method)": [[8, "par_segmentation.roi._ROI._button_press_callback"]], "_display_points() (par_segmentation.roi.roi_jupyter method)": [[8, "par_segmentation.roi.ROI_jupyter._display_points"]], "_display_points() (par_segmentation.roi._roi method)": [[8, "par_segmentation.roi._ROI._display_points"]], "_draw_frame() (par_segmentation.roi.roi_jupyter method)": [[8, "par_segmentation.roi.ROI_jupyter._draw_frame"]], "_draw_frame() (par_segmentation.roi._roi method)": [[8, "par_segmentation.roi._ROI._draw_frame"]], "_key_press_callback() (par_segmentation.roi._roi method)": [[8, "par_segmentation.roi._ROI._key_press_callback"]], "_save() (par_segmentation.roi.roi_jupyter method)": [[8, "par_segmentation.roi.ROI_jupyter._save"]], "_undo() (par_segmentation.roi.roi_jupyter method)": [[8, "par_segmentation.roi.ROI_jupyter._undo"]], "def_roi() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.def_roi"], [11, "par_segmentation.roi.def_roi"]], "interp_roi() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.interp_roi"], [11, "par_segmentation.roi.interp_roi"]], "offset_coordinates() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.offset_coordinates"], [11, "par_segmentation.roi.offset_coordinates"]], "par_segmentation.roi": [[8, "module-par_segmentation.roi"], [11, "module-par_segmentation.roi"]], "run() (par_segmentation.roi.roi_jupyter method)": [[8, "par_segmentation.roi.ROI_jupyter.run"], [11, "par_segmentation.roi.ROI_jupyter.run"]], "run() (par_segmentation.roi._roi method)": [[8, "par_segmentation.roi._ROI.run"]], "spline_roi() (in module par_segmentation.roi)": [[8, "par_segmentation.roi.spline_roi"], [11, "par_segmentation.roi.spline_roi"]]}})